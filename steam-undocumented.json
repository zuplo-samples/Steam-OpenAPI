{
  "openapi": "3.0.0",
  "info": {
    "title": "Steam Web API (Undocumented)",
    "description": "Some APIs work with access tokens, if you have one you can provide it here and it will be preferred over the webapi key. Here's how to get a store token: Open https://store.steampowered.com/pointssummary/ajaxgetasyncconfig , Copy the value of webapi_token. Here's how to get a community token: Open https://steamcommunity.com/my/edit/info Run the following script: JSON.parse(application_config.dataset.loyalty_webapi_token) (or manually copy data-loyalty_webapi_token from application_config element)",
    "version": "1.0.0"
  },
  "paths": {
    "/IAccountCartService/AddItemToCart/v1": {
      "post": {
        "summary": "AddItemToCart operation of IAccountCartService",
        "description": "Performs the AddItemToCart operation",
        "operationId": "IAccountCartService_AddItemToCart",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "packageid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_country",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gift_info",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "accountid_giftee": {
                  "type": "integer",
                  "description": ""
                },
                "gift_message": {
                  "type": "cartgiftmessage",
                  "description": ""
                },
                "time_scheduled_send": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "flags",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "is_gift": {
                  "type": "boolean",
                  "description": ""
                },
                "is_private": {
                  "type": "boolean",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "navdata",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string",
                  "description": ""
                },
                "controller": {
                  "type": "string",
                  "description": ""
                },
                "method": {
                  "type": "string",
                  "description": ""
                },
                "submethod": {
                  "type": "string",
                  "description": ""
                },
                "feature": {
                  "type": "string",
                  "description": ""
                },
                "depth": {
                  "type": "integer",
                  "description": ""
                },
                "countrycode": {
                  "type": "string",
                  "description": ""
                },
                "webkey": {
                  "type": "integer",
                  "description": ""
                },
                "is_client": {
                  "type": "boolean",
                  "description": ""
                },
                "curator_data": {
                  "type": "cuserinterface_curatordata",
                  "description": ""
                },
                "is_likely_bot": {
                  "type": "boolean",
                  "description": ""
                },
                "is_utm": {
                  "type": "boolean",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAccountCartService/AddItemsToCart/v1": {
      "post": {
        "summary": "AddItemsToCart operation of IAccountCartService",
        "description": "Performs the AddItemsToCart operation",
        "operationId": "IAccountCartService_AddItemsToCart",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_country",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "items",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "caccountcart_additemstocart_request_itemtoadd"
            }
          },
          {
            "name": "navdata",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string",
                  "description": ""
                },
                "controller": {
                  "type": "string",
                  "description": ""
                },
                "method": {
                  "type": "string",
                  "description": ""
                },
                "submethod": {
                  "type": "string",
                  "description": ""
                },
                "feature": {
                  "type": "string",
                  "description": ""
                },
                "depth": {
                  "type": "integer",
                  "description": ""
                },
                "countrycode": {
                  "type": "string",
                  "description": ""
                },
                "webkey": {
                  "type": "integer",
                  "description": ""
                },
                "is_client": {
                  "type": "boolean",
                  "description": ""
                },
                "curator_data": {
                  "type": "cuserinterface_curatordata",
                  "description": ""
                },
                "is_likely_bot": {
                  "type": "boolean",
                  "description": ""
                },
                "is_utm": {
                  "type": "boolean",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "items[0]",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "packageid": {
                  "type": "integer",
                  "description": ""
                },
                "bundleid": {
                  "type": "integer",
                  "description": ""
                },
                "gift_info": {
                  "type": "cartgiftinfo",
                  "description": ""
                },
                "flags": {
                  "type": "accountcartlineitemflags",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAccountCartService/DeleteCart/v1": {
      "post": {
        "summary": "DeleteCart operation of IAccountCartService",
        "description": "Performs the DeleteCart operation",
        "operationId": "IAccountCartService_DeleteCart",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAccountCartService/GetRelevantCoupons/v1": {
      "post": {
        "summary": "GetRelevantCoupons operation of IAccountCartService",
        "description": "Performs the GetRelevantCoupons operation",
        "operationId": "IAccountCartService_GetRelevantCoupons",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAccountCartService/MergeShoppingCartContents/v1": {
      "post": {
        "summary": "MergeShoppingCartContents operation of IAccountCartService",
        "description": "Performs the MergeShoppingCartContents operation",
        "operationId": "IAccountCartService_MergeShoppingCartContents",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gidshoppingcart",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_country",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAccountCartService/ModifyLineItem/v1": {
      "post": {
        "summary": "ModifyLineItem operation of IAccountCartService",
        "description": "Performs the ModifyLineItem operation",
        "operationId": "IAccountCartService_ModifyLineItem",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "line_item_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_country",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gift_info",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "accountid_giftee": {
                  "type": "integer",
                  "description": ""
                },
                "gift_message": {
                  "type": "cartgiftmessage",
                  "description": ""
                },
                "time_scheduled_send": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "flags",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "is_gift": {
                  "type": "boolean",
                  "description": ""
                },
                "is_private": {
                  "type": "boolean",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "apply_gidcoupon",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAccountCartService/RemoveItemFromCart/v1": {
      "post": {
        "summary": "RemoveItemFromCart operation of IAccountCartService",
        "description": "Performs the RemoveItemFromCart operation",
        "operationId": "IAccountCartService_RemoveItemFromCart",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "line_item_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_country",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAccountPrivateAppsService/ToggleAppPrivacy/v1": {
      "post": {
        "summary": "ToggleAppPrivacy operation of IAccountPrivateAppsService",
        "description": "Performs the ToggleAppPrivacy operation",
        "operationId": "IAccountPrivateAppsService_ToggleAppPrivacy",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "private",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "appids",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAssetSetPublishingService/AddBranchToAssetSet/v1": {
      "post": {
        "summary": "AddBranchToAssetSet operation of IAssetSetPublishingService",
        "description": "Performs the AddBranchToAssetSet operation",
        "operationId": "IAssetSetPublishingService_AddBranchToAssetSet",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assetset_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAssetSetPublishingService/CreateAssetSet/v1": {
      "post": {
        "summary": "CreateAssetSet operation of IAssetSetPublishingService",
        "description": "Performs the CreateAssetSet operation",
        "operationId": "IAssetSetPublishingService_CreateAssetSet",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assetset",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "appid": {
                  "type": "integer",
                  "description": ""
                },
                "assetset_id": {
                  "type": "integer",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "desc": {
                  "type": "string",
                  "description": ""
                },
                "branches[0]": {
                  "type": "string[]",
                  "description": ""
                },
                "last_update_rtime": {
                  "type": "integer",
                  "description": ""
                },
                "priority": {
                  "type": "integer",
                  "description": ""
                },
                "last_publish_rtime": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAssetSetPublishingService/DeleteAssetSet/v1": {
      "post": {
        "summary": "DeleteAssetSet operation of IAssetSetPublishingService",
        "description": "Performs the DeleteAssetSet operation",
        "operationId": "IAssetSetPublishingService_DeleteAssetSet",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assetset_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAssetSetPublishingService/RemoveBranchFromAssetSet/v1": {
      "post": {
        "summary": "RemoveBranchFromAssetSet operation of IAssetSetPublishingService",
        "description": "Performs the RemoveBranchFromAssetSet operation",
        "operationId": "IAssetSetPublishingService_RemoveBranchFromAssetSet",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assetset_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAssetSetPublishingService/SwapAssetSetPriority/v1": {
      "post": {
        "summary": "SwapAssetSetPriority operation of IAssetSetPublishingService",
        "description": "Performs the SwapAssetSetPriority operation",
        "operationId": "IAssetSetPublishingService_SwapAssetSetPriority",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "first_assetset_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "second_assetset_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAssetSetPublishingService/UpdateAssetSet/v1": {
      "post": {
        "summary": "UpdateAssetSet operation of IAssetSetPublishingService",
        "description": "Performs the UpdateAssetSet operation",
        "operationId": "IAssetSetPublishingService_UpdateAssetSet",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assetset",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "appid": {
                  "type": "integer",
                  "description": ""
                },
                "assetset_id": {
                  "type": "integer",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "desc": {
                  "type": "string",
                  "description": ""
                },
                "branches[0]": {
                  "type": "string[]",
                  "description": ""
                },
                "last_update_rtime": {
                  "type": "integer",
                  "description": ""
                },
                "priority": {
                  "type": "integer",
                  "description": ""
                },
                "last_publish_rtime": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAssetSetPublishingService/UpdatePublishTime/v1": {
      "post": {
        "summary": "UpdatePublishTime operation of IAssetSetPublishingService",
        "description": "Performs the UpdatePublishTime operation",
        "operationId": "IAssetSetPublishingService_UpdatePublishTime",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assetset_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAuctionService/CancelBid/v1": {
      "post": {
        "summary": "CancelBid operation of IAuctionService",
        "description": "Performs the CancelBid operation",
        "operationId": "IAuctionService_CancelBid",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auctiondescriptionid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAuctionService/PlaceBid/v1": {
      "post": {
        "summary": "PlaceBid operation of IAuctionService",
        "description": "Performs the PlaceBid operation",
        "operationId": "IAuctionService_PlaceBid",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auctiondescriptionid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "amount_bid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expected_amount_remaining",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAuthenticationService/EnumerateTokens/v1": {
      "post": {
        "summary": "Enumerate durable (refresh) tokens for the given subject account",
        "description": "Performs the EnumerateTokens operation",
        "operationId": "IAuthenticationService_EnumerateTokens",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAuthenticationService/GenerateAccessTokenForApp/v1": {
      "post": {
        "summary": "Given a refresh token for a client app audience (e.g. desktop client / mobile client), generate an access token",
        "description": "Performs the GenerateAccessTokenForApp operation",
        "operationId": "IAuthenticationService_GenerateAccessTokenForApp",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refresh_token",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "renewal_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "etokenrenewaltype"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAuthenticationService/MigrateMobileSession/v1": {
      "post": {
        "summary": "Migrates a WG token to an access and refresh token using a signature generated with the user's 2FA secret",
        "description": "Performs the MigrateMobileSession operation",
        "operationId": "IAuthenticationService_MigrateMobileSession",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "Steam ID of the user to migrate",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "WG Token to migrate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature over the wg token using the user's 2FA token",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAuthenticationService/RevokeRefreshToken/v1": {
      "post": {
        "summary": "Mark the given refresh token as revoked",
        "description": "Performs the RevokeRefreshToken operation",
        "operationId": "IAuthenticationService_RevokeRefreshToken",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "Token holder if an admin action on behalf of another user",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "revoke_action",
            "in": "query",
            "description": "Select between logout and logout-and-forget-machine",
            "required": false,
            "schema": {
              "type": "eauthtokenrevokeaction"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "required signature over token_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAuthenticationService/RevokeToken/v1": {
      "post": {
        "summary": "Revoke a single token immediately, making it unable to renew or generate new access tokens",
        "description": "Performs the RevokeToken operation",
        "operationId": "IAuthenticationService_RevokeToken",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revoke_action",
            "in": "query",
            "description": "Select between logout and logout-and-forget-machine",
            "required": false,
            "schema": {
              "type": "eauthtokenrevokeaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAuthenticationSupportService/MarkTokenCompromised/v1": {
      "post": {
        "summary": "MarkTokenCompromised operation of IAuthenticationSupportService",
        "description": "Performs the MarkTokenCompromised operation",
        "operationId": "IAuthenticationSupportService_MarkTokenCompromised",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "token_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IAuthenticationSupportService/RevokeToken/v1": {
      "post": {
        "summary": "Revokes a user's auth token",
        "description": "Performs the RevokeToken operation",
        "operationId": "IAuthenticationSupportService_RevokeToken",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "query",
            "description": "Token ID of the token to revoke (required)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "Steam ID of the owner of that token (required)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IBroadcastService/MuteBroadcastChatUser/v1": {
      "post": {
        "summary": "Mute a user in your broadcast chat",
        "description": "Performs the MuteBroadcastChatUser operation",
        "operationId": "IBroadcastService_MuteBroadcastChatUser",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chat_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "muted",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IBroadcastService/PostChatMessage/v1": {
      "post": {
        "summary": "Post chat message to specified chat room",
        "description": "Performs the PostChatMessage operation",
        "operationId": "IBroadcastService_PostChatMessage",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chat_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "message",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instance_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "ELanguage of the user posting the message, default is english",
            "required": false,
            "schema": {
              "type": "elanguage"
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "The two letter country code",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IBroadcastService/RemoveUserChatText/v1": {
      "post": {
        "summary": "Tell all viewers to remove user chat text",
        "description": "Performs the RemoveUserChatText operation",
        "operationId": "IBroadcastService_RemoveUserChatText",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chat_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IBroadcastService/SetClipDetails/v1": {
      "post": {
        "summary": "Updates a broadcast clip",
        "description": "Performs the SetClipDetails operation",
        "operationId": "IBroadcastService_SetClipDetails",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_clip_id",
            "in": "query",
            "description": "Clip ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "start time of the clip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "end time of the clip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "video_description",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IBroadcastService/SetRTMPInfo/v1": {
      "post": {
        "summary": "Sets RTMP broadcast info",
        "description": "Performs the SetRTMPInfo operation",
        "operationId": "IBroadcastService_SetRTMPInfo",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_permission",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "update_token",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "broadcast_delay",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "required_app_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "broadcast_chat_permission",
            "in": "query",
            "description": "Who is permitted to send a chat message during broadcast",
            "required": false,
            "schema": {
              "type": "ebroadcastchatpermission"
            }
          },
          {
            "name": "broadcast_buffer",
            "in": "query",
            "description": "Previous seconds we keep of the stream available",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "broadcaster steamID if not logged-in user",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "chat_rate_limit",
            "in": "query",
            "description": "Seconds required between chat messages",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "enable_replay",
            "in": "query",
            "description": "Enable replay of last upload",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_partner_chat_only",
            "in": "query",
            "description": "When true, then only steamwork partner can create chat messages.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "wordban_list",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IBroadcastService/StartBuildClip/v1": {
      "post": {
        "summary": "Start building a broadcast clip",
        "description": "Performs the StartBuildClip operation",
        "operationId": "IBroadcastService_StartBuildClip",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "broadcast_session_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "first_segment",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "num_segments",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "clip_description",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IBroadcastService/UpdateChatMessageFlair/v1": {
      "post": {
        "summary": "Update chat message flair in the specified chat room",
        "description": "Performs the UpdateChatMessageFlair operation",
        "operationId": "IBroadcastService_UpdateChatMessageFlair",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chat_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "flair",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/CheckFAQPermissions/v1": {
      "post": {
        "summary": "CheckFAQPermissions operation of IClanFAQSService",
        "description": "Performs the CheckFAQPermissions operation",
        "operationId": "IClanFAQSService_CheckFAQPermissions",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/Create/v1": {
      "post": {
        "summary": "Create operation of IClanFAQSService",
        "description": "Performs the Create operation",
        "operationId": "IClanFAQSService_Create",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "internal_name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "json_data",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/Delete/v1": {
      "post": {
        "summary": "Delete operation of IClanFAQSService",
        "description": "Performs the Delete operation",
        "operationId": "IClanFAQSService_Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "faq_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/GetAllDrafts/v1": {
      "post": {
        "summary": "GetAllDrafts operation of IClanFAQSService",
        "description": "Performs the GetAllDrafts operation",
        "operationId": "IClanFAQSService_GetAllDrafts",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "faq_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/GetAllFAQsForClan/v1": {
      "post": {
        "summary": "GetAllFAQsForClan operation of IClanFAQSService",
        "description": "Performs the GetAllFAQsForClan operation",
        "operationId": "IClanFAQSService_GetAllFAQsForClan",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/GetAllLatestVersionPublishedFAQS/v1": {
      "post": {
        "summary": "GetAllLatestVersionPublishedFAQS operation of IClanFAQSService",
        "description": "Performs the GetAllLatestVersionPublishedFAQS operation",
        "operationId": "IClanFAQSService_GetAllLatestVersionPublishedFAQS",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "faq_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/GetFAQVersion/v1": {
      "post": {
        "summary": "GetFAQVersion operation of IClanFAQSService",
        "description": "Performs the GetFAQVersion operation",
        "operationId": "IClanFAQSService_GetFAQVersion",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "faq_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/PreviewDraft/v1": {
      "post": {
        "summary": "PreviewDraft operation of IClanFAQSService",
        "description": "Performs the PreviewDraft operation",
        "operationId": "IClanFAQSService_PreviewDraft",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "faq_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/PublishDraft/v1": {
      "post": {
        "summary": "PublishDraft operation of IClanFAQSService",
        "description": "Performs the PublishDraft operation",
        "operationId": "IClanFAQSService_PublishDraft",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "faq_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "elanguage"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/SetVisibility/v1": {
      "post": {
        "summary": "SetVisibility operation of IClanFAQSService",
        "description": "Performs the SetVisibility operation",
        "operationId": "IClanFAQSService_SetVisibility",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "faq_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "visible_in_global_realm",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "visible_in_china_realm",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/UpdateDraft/v1": {
      "post": {
        "summary": "UpdateDraft operation of IClanFAQSService",
        "description": "Performs the UpdateDraft operation",
        "operationId": "IClanFAQSService_UpdateDraft",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "faq_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "elanguage"
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/UpdateInternalName/v1": {
      "post": {
        "summary": "UpdateInternalName operation of IClanFAQSService",
        "description": "Performs the UpdateInternalName operation",
        "operationId": "IClanFAQSService_UpdateInternalName",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "faq_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "internal_name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClanFAQSService/UpdateJsonData/v1": {
      "post": {
        "summary": "UpdateJsonData operation of IClanFAQSService",
        "description": "Performs the UpdateJsonData operation",
        "operationId": "IClanFAQSService_UpdateJsonData",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "faq_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "json_data",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClientCommService/EnableOrDisableDownloads/v1": {
      "post": {
        "summary": "EnableOrDisableDownloads operation of IClientCommService",
        "description": "Performs the EnableOrDisableDownloads operation",
        "operationId": "IClientCommService_EnableOrDisableDownloads",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_instanceid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "enable",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClientCommService/InstallClientApp/v1": {
      "post": {
        "summary": "InstallClientApp operation of IClientCommService",
        "description": "Performs the InstallClientApp operation",
        "operationId": "IClientCommService_InstallClientApp",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "client_instanceid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClientCommService/LaunchClientApp/v1": {
      "post": {
        "summary": "LaunchClientApp operation of IClientCommService",
        "description": "Performs the LaunchClientApp operation",
        "operationId": "IClientCommService_LaunchClientApp",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_instanceid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query_params",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClientCommService/SetClientAppUpdateState/v1": {
      "post": {
        "summary": "SetClientAppUpdateState operation of IClientCommService",
        "description": "Performs the SetClientAppUpdateState operation",
        "operationId": "IClientCommService_SetClientAppUpdateState",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "client_instanceid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClientCommService/UninstallClientApp/v1": {
      "post": {
        "summary": "UninstallClientApp operation of IClientCommService",
        "description": "Performs the UninstallClientApp operation",
        "operationId": "IClientCommService_UninstallClientApp",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "client_instanceid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClientMetricsService/ReportClientError/v1": {
      "post": {
        "summary": "ReportClientError operation of IClientMetricsService",
        "description": "Performs the ReportClientError operation",
        "operationId": "IClientMetricsService_ReportClientError",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "errors",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "cclientmetrics_reportclienterror_notification.error"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IClientMetricsService/ReportReactUsage/v1": {
      "post": {
        "summary": "ReportReactUsage operation of IClientMetricsService",
        "description": "Performs the ReportReactUsage operation",
        "operationId": "IClientMetricsService_ReportReactUsage",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routes",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "cclientmetrics_reportreactusage_notification.routedata"
              }
            }
          },
          {
            "name": "components",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "cclientmetrics_reportreactusage_notification.componentdata"
              }
            }
          },
          {
            "name": "actions",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "cclientmetrics_reportreactusage_notification.actiondata"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ICloudService/BeginAppUploadBatch/v1": {
      "post": {
        "summary": "Indicate a batch of files that will be uploaded / deleted for an app.",
        "description": "Performs the BeginAppUploadBatch operation",
        "operationId": "ICloudService_BeginAppUploadBatch",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "App ID for this batch is for.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "machine_name",
            "in": "query",
            "description": "Client machine name (may be user's alias).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "files_to_upload",
            "in": "query",
            "description": "Filenames of files to upload in this batch",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "files_to_delete",
            "in": "query",
            "description": "Filenames of files to delete in this batch",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Client ID number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "app_build_id",
            "in": "query",
            "description": "Current local build of the app which made these changes",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "OAuth access token for the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "files_to_upload",
            "in": "query",
            "description": "List of all files to be uploaded (new files or updates for existing files) as part of\n            this batch.",
            "required": true,
            "schema": {
              "type": "string list"
            }
          },
          {
            "name": "files_to_delete",
            "in": "query",
            "description": "List of all files to be deleted from Steam Cloud as part of this batch.",
            "required": true,
            "schema": {
              "type": "string list"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ICloudService/BeginHTTPUpload/v1": {
      "post": {
        "summary": "Begins the process of uploading a file to Steam external storage services. File should be uploaded via HTTP PUT to the returned URL, after which the upload must be finalized by a call to CommitHTTPUpload.",
        "description": "Performs the BeginHTTPUpload operation",
        "operationId": "ICloudService_BeginHTTPUpload",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "App ID for which the file is being uploaded.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "file_size",
            "in": "query",
            "description": "Original file size in bytes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "description": "Name of the file to store in the cloud.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_sha",
            "in": "query",
            "description": "Hex string (40 digits) representing the SHA1 digest of the file.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_public",
            "in": "query",
            "description": "True if the file should be marked public on the UFS, false otherwise.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "platforms_to_sync",
            "in": "query",
            "description": "Array of string specifying which platforms to sync; value values: all, Windows, MacOS, linux, Switch, iPhoneOS, Android.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "request_headers_names",
            "in": "query",
            "description": "Names for headers you'll want to set on your upload request. May be left blank.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "request_headers_values",
            "in": "query",
            "description": "Values for headers you'll want to set on your upload request. The number of names must equal the number of values.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "upload_batch_id",
            "in": "query",
            "description": "ID of this batch returned by prior BeginAppUploadBatch call.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ICloudService/BeginUGCUpload/v1": {
      "post": {
        "summary": "Begins the process of uploading a file to Steam external storage services. File should be uploaded via HTTP PUT to the returned URL, after which the upload must be finalized by a call to CommitHTTPUpload.",
        "description": "Performs the BeginUGCUpload operation",
        "operationId": "ICloudService_BeginUGCUpload",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "App ID this UGC belongs to.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "file_size",
            "in": "query",
            "description": "File size in bytes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "description": "Name of the file.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_sha",
            "in": "query",
            "description": "Hex string (40 digits) representing the SHA1 digest of the file.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content_type",
            "in": "query",
            "description": "MIME content type of the file",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ICloudService/CommitHTTPUpload/v1": {
      "post": {
        "summary": "Commits a file upload initiated by BeginHTTPUpload and transferred via HTTP PUT.",
        "description": "Performs the CommitHTTPUpload operation",
        "operationId": "ICloudService_CommitHTTPUpload",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transfer_succeeded",
            "in": "query",
            "description": "True if the HTTP PUT to the upload URL succeeded (URL provided in response to Cloud.BeginHTTPUpload), false if a failure occurred.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "App ID for which the file is being uploaded. Must match the app ID provided to Cloud.BeginHTTPUpload.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "file_sha",
            "in": "query",
            "description": "Hex string (40 digits) representing the SHA1 digest of the file. Must match the SHA1 digest provided to Cloud.BeginHTTPUpload.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "description": "Filename as specified in the Cloud.BeginHTTPUpload request.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ICloudService/CommitUGCUpload/v1": {
      "post": {
        "summary": "Commits a file upload initiated by BeginUGCUpload and transferred via HTTP PUT.",
        "description": "Performs the CommitUGCUpload operation",
        "operationId": "ICloudService_CommitUGCUpload",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transfer_succeeded",
            "in": "query",
            "description": "True if the HTTP PUT to the upload URL succeeded (URL provided in response to Cloud.BeginUGCUpload), false if a failure occurred.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "App ID for which the file is being uploaded. Must match the app ID provided to Cloud.BeginUGCUpload.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ugcid",
            "in": "query",
            "description": "UGC ID of the uploaded file.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ICloudService/CompleteAppUploadBatch/v1": {
      "post": {
        "summary": "Indicate that the batch is complete or being stopped for some other reason.",
        "description": "Performs the CompleteAppUploadBatch operation",
        "operationId": "ICloudService_CompleteAppUploadBatch",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "App ID for this batch is for.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "batch_id",
            "in": "query",
            "description": "ID of this batch.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "batch_eresult",
            "in": "query",
            "description": "result of this batch.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ICloudService/CompleteAppUploadBatchBlocking/v1": {
      "post": {
        "summary": "Indicate that the batch is complete or being stopped for some other reason.",
        "description": "Performs the CompleteAppUploadBatchBlocking operation",
        "operationId": "ICloudService_CompleteAppUploadBatchBlocking",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "App ID for this batch is for.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "batch_id",
            "in": "query",
            "description": "ID of this batch.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "batch_eresult",
            "in": "query",
            "description": "result of this batch.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ICloudService/Delete/v1": {
      "post": {
        "summary": "Deletes a file from the user's cloud.",
        "description": "Performs the Delete operation",
        "operationId": "ICloudService_Delete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "App ID the file belongs to.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "upload_batch_id",
            "in": "query",
            "description": "ID of this batch returned by prior BeginAppUploadBatch call.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ICommunityService/GetAvatarHistory/v1": {
      "post": {
        "summary": "GetAvatarHistory operation of ICommunityService",
        "description": "Performs the GetAvatarHistory operation",
        "operationId": "ICommunityService_GetAvatarHistory",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter_user_uploaded_only",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ICredentialsService/SteamGuardPhishingReport/v1": {
      "post": {
        "summary": "SteamGuardPhishingReport",
        "description": "Performs the SteamGuardPhishingReport operation",
        "operationId": "ICredentialsService_SteamGuardPhishingReport",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "param_string",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ipaddress_actual",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ICredentialsService/ValidateEmailAddress/v1": {
      "post": {
        "summary": "Validate an email address given a token",
        "description": "Performs the ValidateEmailAddress operation",
        "operationId": "ICredentialsService_ValidateEmailAddress",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stoken",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IDailyDealService/CancelDailyDeal/v1": {
      "post": {
        "summary": "CancelDailyDeal operation of IDailyDealService",
        "description": "Performs the CancelDailyDeal operation",
        "operationId": "IDailyDealService_CancelDailyDeal",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IDailyDealService/CreateDailyDeal/v1": {
      "post": {
        "summary": "CreateDailyDeal operation of IDailyDealService",
        "description": "Performs the CreateDailyDeal operation",
        "operationId": "IDailyDealService_CreateDailyDeal",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daily_deal",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "gid": {
                  "type": "integer",
                  "description": ""
                },
                "store_item_type": {
                  "type": "integer",
                  "description": ""
                },
                "store_item_id": {
                  "type": "integer",
                  "description": ""
                },
                "store_item_name": {
                  "type": "string",
                  "description": ""
                },
                "discount_event_id": {
                  "type": "integer",
                  "description": ""
                },
                "creator_id": {
                  "type": "integer",
                  "description": ""
                },
                "rtime32_start_time": {
                  "type": "integer",
                  "description": ""
                },
                "last_update_time": {
                  "type": "integer",
                  "description": ""
                },
                "template_json": {
                  "type": "string",
                  "description": ""
                },
                "partner_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "internal_json": {
                  "type": "string",
                  "description": ""
                },
                "deleted": {
                  "type": "boolean",
                  "description": ""
                },
                "cancelled": {
                  "type": "boolean",
                  "description": ""
                },
                "rtime32_cancel_time": {
                  "type": "integer",
                  "description": ""
                },
                "asset_request_id": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "partnerid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "inviteid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IDailyDealService/DeleteDailyDeal/v1": {
      "post": {
        "summary": "DeleteDailyDeal operation of IDailyDealService",
        "description": "Performs the DeleteDailyDeal operation",
        "operationId": "IDailyDealService_DeleteDailyDeal",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IDailyDealService/UpdateDailyDeal/v1": {
      "post": {
        "summary": "UpdateDailyDeal operation of IDailyDealService",
        "description": "Performs the UpdateDailyDeal operation",
        "operationId": "IDailyDealService_UpdateDailyDeal",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daily_deal",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "gid": {
                  "type": "integer",
                  "description": ""
                },
                "store_item_type": {
                  "type": "integer",
                  "description": ""
                },
                "store_item_id": {
                  "type": "integer",
                  "description": ""
                },
                "store_item_name": {
                  "type": "string",
                  "description": ""
                },
                "discount_event_id": {
                  "type": "integer",
                  "description": ""
                },
                "creator_id": {
                  "type": "integer",
                  "description": ""
                },
                "rtime32_start_time": {
                  "type": "integer",
                  "description": ""
                },
                "last_update_time": {
                  "type": "integer",
                  "description": ""
                },
                "template_json": {
                  "type": "string",
                  "description": ""
                },
                "partner_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "internal_json": {
                  "type": "string",
                  "description": ""
                },
                "deleted": {
                  "type": "boolean",
                  "description": ""
                },
                "cancelled": {
                  "type": "boolean",
                  "description": ""
                },
                "rtime32_cancel_time": {
                  "type": "integer",
                  "description": ""
                },
                "asset_request_id": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/CancelFamilyGroupInvite/v1": {
      "post": {
        "summary": "Cancel a pending invite to the specified family group",
        "description": "Performs the CancelFamilyGroupInvite operation",
        "operationId": "IFamilyGroupsService_CancelFamilyGroupInvite",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid_to_cancel",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/ClearCooldownSkip/v1": {
      "post": {
        "summary": "ClearCooldownSkip operation of IFamilyGroupsService",
        "description": "Performs the ClearCooldownSkip operation",
        "operationId": "IFamilyGroupsService_ClearCooldownSkip",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "invite_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/ConfirmInviteToFamilyGroup/v1": {
      "post": {
        "summary": "ConfirmInviteToFamilyGroup operation of IFamilyGroupsService",
        "description": "Performs the ConfirmInviteToFamilyGroup operation",
        "operationId": "IFamilyGroupsService_ConfirmInviteToFamilyGroup",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "invite_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nonce",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/ConfirmJoinFamilyGroup/v1": {
      "post": {
        "summary": "ConfirmJoinFamilyGroup operation of IFamilyGroupsService",
        "description": "Performs the ConfirmJoinFamilyGroup operation",
        "operationId": "IFamilyGroupsService_ConfirmJoinFamilyGroup",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "invite_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nonce",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/CreateFamilyGroup/v1": {
      "post": {
        "summary": "Creates a new family group",
        "description": "Performs the CreateFamilyGroup operation",
        "operationId": "IFamilyGroupsService_CreateFamilyGroup",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "(Support only) User to create this family group for and add to the group.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/DeleteFamilyGroup/v1": {
      "post": {
        "summary": "Delete the specified family group",
        "description": "Performs the DeleteFamilyGroup operation",
        "operationId": "IFamilyGroupsService_DeleteFamilyGroup",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/ForceAcceptInvite/v1": {
      "post": {
        "summary": "ForceAcceptInvite operation of IFamilyGroupsService",
        "description": "Performs the ForceAcceptInvite operation",
        "operationId": "IFamilyGroupsService_ForceAcceptInvite",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/GetChangeLog/v1": {
      "post": {
        "summary": "Return a log of changes made to this family group",
        "description": "Performs the GetChangeLog operation",
        "operationId": "IFamilyGroupsService_GetChangeLog",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/GetPlaytimeSummary/v1": {
      "post": {
        "summary": "Get the playtimes in all apps from the shared library for the whole family group.",
        "description": "Performs the GetPlaytimeSummary operation",
        "operationId": "IFamilyGroupsService_GetPlaytimeSummary",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/InviteToFamilyGroup/v1": {
      "post": {
        "summary": "Invites an account to a family group",
        "description": "Performs the InviteToFamilyGroup operation",
        "operationId": "IFamilyGroupsService_InviteToFamilyGroup",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "receiver_steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "receiver_role",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/JoinFamilyGroup/v1": {
      "post": {
        "summary": "Join the specified family group",
        "description": "Performs the JoinFamilyGroup operation",
        "operationId": "IFamilyGroupsService_JoinFamilyGroup",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nonce",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/ModifyFamilyGroupDetails/v1": {
      "post": {
        "summary": "Modify the details of the specified family group",
        "description": "Performs the ModifyFamilyGroupDetails operation",
        "operationId": "IFamilyGroupsService_ModifyFamilyGroupDetails",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "If present, set the family name to the current value",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/RemoveFromFamilyGroup/v1": {
      "post": {
        "summary": "Remove the specified account from the specified family group",
        "description": "Performs the RemoveFromFamilyGroup operation",
        "operationId": "IFamilyGroupsService_RemoveFromFamilyGroup",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid_to_remove",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/RequestPurchase/v1": {
      "post": {
        "summary": "Request purchase of the specified cart",
        "description": "Performs the RequestPurchase operation",
        "operationId": "IFamilyGroupsService_RequestPurchase",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "Requester's family group id'",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "gidshoppingcart",
            "in": "query",
            "description": "The shopping cart with items to purchase.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "store_country_code",
            "in": "query",
            "description": "The store country code of the requestor.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "use_account_cart",
            "in": "query",
            "description": "Request the contents of the account cart instead of gidshoppingcart?",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/ResendInvitationToFamilyGroup/v1": {
      "post": {
        "summary": "ResendInvitationToFamilyGroup operation of IFamilyGroupsService",
        "description": "Performs the ResendInvitationToFamilyGroup operation",
        "operationId": "IFamilyGroupsService_ResendInvitationToFamilyGroup",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/SetFamilyCooldownOverrides/v1": {
      "post": {
        "summary": "Set the number of times a family group's cooldown time should be ignored for joins.",
        "description": "Performs the SetFamilyCooldownOverrides operation",
        "operationId": "IFamilyGroupsService_SetFamilyCooldownOverrides",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "The family group to set the cooldown overrides on",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cooldown_count",
            "in": "query",
            "description": "How many cooldown overrides this family group should have",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/SetPreferredLender/v1": {
      "post": {
        "summary": "SetPreferredLender operation of IFamilyGroupsService",
        "description": "Performs the SetPreferredLender operation",
        "operationId": "IFamilyGroupsService_SetPreferredLender",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "lender_steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IFamilyGroupsService/UndeleteFamilyGroup/v1": {
      "post": {
        "summary": "UndeleteFamilyGroup operation of IFamilyGroupsService",
        "description": "Performs the UndeleteFamilyGroup operation",
        "operationId": "IFamilyGroupsService_UndeleteFamilyGroup",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family_groupid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IGameInventory/UpdateItemDefs/v1": {
      "post": {
        "summary": "UpdateItemDefs operation of IGameInventory",
        "description": "Performs the UpdateItemDefs operation",
        "operationId": "IGameInventory_UpdateItemDefs",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Steamworks Web API publisher authentication key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "appid of game",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemdefs",
            "in": "query",
            "description": "One or more Item Definitions, presented as a JSON array, to be updated or created.",
            "required": true,
            "schema": {
              "type": "json array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IInventoryService/ConsumeItem/v1": {
      "post": {
        "summary": "Consume an item",
        "description": "Performs the ConsumeItem operation",
        "operationId": "IInventoryService_ConsumeItem",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemid",
            "in": "query",
            "description": "Item ID to be consumed",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Amount of the given item stack to be consumed",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "requestid",
            "in": "query",
            "description": "Clients may provide a unique identifier for a request to perform at most once execution.\n            When a requestid is resubmitted, it will not cause the work to be performed again; the\n            response message will be the current state of items affected by the original successful\n            execution.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ILoyaltyRewardsService/AddReaction/v1": {
      "post": {
        "summary": "AddReaction operation of ILoyaltyRewardsService",
        "description": "Performs the AddReaction operation",
        "operationId": "ILoyaltyRewardsService_AddReaction",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "targetid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "reactionid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ILoyaltyRewardsService/RedeemPoints/v1": {
      "post": {
        "summary": "RedeemPoints operation of ILoyaltyRewardsService",
        "description": "Performs the RedeemPoints operation",
        "operationId": "ILoyaltyRewardsService_RedeemPoints",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "defid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expected_points_cost",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ILoyaltyRewardsService/RedeemPointsForBadgeLevel/v1": {
      "post": {
        "summary": "RedeemPointsForBadgeLevel operation of ILoyaltyRewardsService",
        "description": "Performs the RedeemPointsForBadgeLevel operation",
        "operationId": "ILoyaltyRewardsService_RedeemPointsForBadgeLevel",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "defid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "num_levels",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ILoyaltyRewardsService/RedeemPointsForProfileCustomization/v1": {
      "post": {
        "summary": "RedeemPointsForProfileCustomization operation of ILoyaltyRewardsService",
        "description": "Performs the RedeemPointsForProfileCustomization operation",
        "operationId": "ILoyaltyRewardsService_RedeemPointsForProfileCustomization",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customization_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ILoyaltyRewardsService/RedeemPointsForProfileCustomizationUpgrade/v1": {
      "post": {
        "summary": "RedeemPointsForProfileCustomizationUpgrade operation of ILoyaltyRewardsService",
        "description": "Performs the RedeemPointsForProfileCustomizationUpgrade operation",
        "operationId": "ILoyaltyRewardsService_RedeemPointsForProfileCustomizationUpgrade",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customization_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "new_level",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ILoyaltyRewardsService/RedeemPointsToUpgradeItem/v1": {
      "post": {
        "summary": "RedeemPointsToUpgradeItem operation of ILoyaltyRewardsService",
        "description": "Performs the RedeemPointsToUpgradeItem operation",
        "operationId": "ILoyaltyRewardsService_RedeemPointsToUpgradeItem",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "defid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expected_points_cost",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "communityitemid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ILoyaltyRewardsService/RegisterForSteamDeckRewards/v1": {
      "post": {
        "summary": "RegisterForSteamDeckRewards operation of ILoyaltyRewardsService",
        "description": "Performs the RegisterForSteamDeckRewards operation",
        "operationId": "ILoyaltyRewardsService_RegisterForSteamDeckRewards",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serial_number",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "controller_code",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMarketingMessagesService/CreateMarketingMessage/v1": {
      "post": {
        "summary": "Create a new marketing message.",
        "description": "Performs the CreateMarketingMessage operation",
        "operationId": "IMarketingMessagesService_CreateMarketingMessage",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "gid": {
                  "type": "integer",
                  "description": ""
                },
                "title": {
                  "type": "string",
                  "description": ""
                },
                "type": {
                  "type": "emarketingmessagetype",
                  "description": ""
                },
                "visibility": {
                  "type": "emarketingmessagevisibility",
                  "description": ""
                },
                "priority": {
                  "type": "integer",
                  "description": ""
                },
                "association_type": {
                  "type": "emarketingmessageassociationtype",
                  "description": ""
                },
                "associated_id": {
                  "type": "integer",
                  "description": ""
                },
                "associated_name": {
                  "type": "string",
                  "description": ""
                },
                "start_date": {
                  "type": "integer",
                  "description": ""
                },
                "end_date": {
                  "type": "integer",
                  "description": ""
                },
                "country_allow": {
                  "type": "string",
                  "description": ""
                },
                "country_deny": {
                  "type": "string",
                  "description": ""
                },
                "ownership_restrictions_overridden": {
                  "type": "boolean",
                  "description": ""
                },
                "must_own_appid": {
                  "type": "integer",
                  "description": ""
                },
                "must_not_own_appid": {
                  "type": "integer",
                  "description": ""
                },
                "must_own_packageid": {
                  "type": "integer",
                  "description": ""
                },
                "must_not_own_packageid": {
                  "type": "integer",
                  "description": ""
                },
                "must_have_launched_appid": {
                  "type": "integer",
                  "description": ""
                },
                "additional_restrictions": {
                  "type": "string",
                  "description": ""
                },
                "template_type": {
                  "type": "string",
                  "description": ""
                },
                "template_vars": {
                  "type": "string",
                  "description": ""
                },
                "flags": {
                  "type": "integer",
                  "description": ""
                },
                "creator_name": {
                  "type": "string",
                  "description": ""
                },
                "template_vars_json": {
                  "type": "string",
                  "description": ""
                },
                "additional_restrictions_json": {
                  "type": "string",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "from_json",
            "in": "query",
            "description": "If set, then overwrite the template_vars and additional_restrictions keyvalues from json",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMarketingMessagesService/DeleteMarketingMessage/v1": {
      "post": {
        "summary": "Delete a marketing message.",
        "description": "Performs the DeleteMarketingMessage operation",
        "operationId": "IMarketingMessagesService_DeleteMarketingMessage",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMarketingMessagesService/FindMarketingMessages/v1": {
      "post": {
        "summary": "Search for marketing messages by name, type, etc.",
        "description": "Performs the FindMarketingMessages operation",
        "operationId": "IMarketingMessagesService_FindMarketingMessages",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lookup_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "emarketingmessagelookuptype"
            }
          },
          {
            "name": "gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "message_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "emarketingmessagetype"
            }
          },
          {
            "name": "gidlist",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMarketingMessagesService/GetMarketingMessage/v1": {
      "post": {
        "summary": "Get a single marketing message.  Admin account needed for non-active messages",
        "description": "Performs the GetMarketingMessage operation",
        "operationId": "IMarketingMessagesService_GetMarketingMessage",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMarketingMessagesService/GetMarketingMessageViewerStats/v1": {
      "post": {
        "summary": "For a specific marketing message, then all of the viewership stats for the date range it was intended to be visible to customers",
        "description": "Performs the GetMarketingMessageViewerStats operation",
        "operationId": "IMarketingMessagesService_GetMarketingMessageViewerStats",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMarketingMessagesService/GetMarketingMessagesForApps/v1": {
      "post": {
        "summary": "GetMarketingMessagesForApps operation of IMarketingMessagesService",
        "description": "Performs the GetMarketingMessagesForApps operation",
        "operationId": "IMarketingMessagesService_GetMarketingMessagesForApps",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appids",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMarketingMessagesService/GetMarketingMessagesViewerRangeStats/v1": {
      "post": {
        "summary": "For a time range, return the seen stats across all of the marketing messages",
        "description": "Performs the GetMarketingMessagesViewerRangeStats operation",
        "operationId": "IMarketingMessagesService_GetMarketingMessagesViewerRangeStats",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rt_start_time",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "rt_end_time",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMarketingMessagesService/MarkMessageSeen/v1": {
      "post": {
        "summary": "Mark that a user has viewed a message (so we won't show it again)'.",
        "description": "Performs the MarkMessageSeen operation",
        "operationId": "IMarketingMessagesService_MarkMessageSeen",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "display_index",
            "in": "query",
            "description": "Where in the stack was the marketing message, 1-based, zero means we don't know",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "template_type",
            "in": "query",
            "description": "Which type of template did they see",
            "required": false,
            "schema": {
              "type": "emarketingmessagetemplatetype"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMarketingMessagesService/UpdateMarketingMessage/v1": {
      "post": {
        "summary": "Modify a marketing message.",
        "description": "Performs the UpdateMarketingMessage operation",
        "operationId": "IMarketingMessagesService_UpdateMarketingMessage",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "message",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "gid": {
                  "type": "integer",
                  "description": ""
                },
                "title": {
                  "type": "string",
                  "description": ""
                },
                "type": {
                  "type": "emarketingmessagetype",
                  "description": ""
                },
                "visibility": {
                  "type": "emarketingmessagevisibility",
                  "description": ""
                },
                "priority": {
                  "type": "integer",
                  "description": ""
                },
                "association_type": {
                  "type": "emarketingmessageassociationtype",
                  "description": ""
                },
                "associated_id": {
                  "type": "integer",
                  "description": ""
                },
                "associated_name": {
                  "type": "string",
                  "description": ""
                },
                "start_date": {
                  "type": "integer",
                  "description": ""
                },
                "end_date": {
                  "type": "integer",
                  "description": ""
                },
                "country_allow": {
                  "type": "string",
                  "description": ""
                },
                "country_deny": {
                  "type": "string",
                  "description": ""
                },
                "ownership_restrictions_overridden": {
                  "type": "boolean",
                  "description": ""
                },
                "must_own_appid": {
                  "type": "integer",
                  "description": ""
                },
                "must_not_own_appid": {
                  "type": "integer",
                  "description": ""
                },
                "must_own_packageid": {
                  "type": "integer",
                  "description": ""
                },
                "must_not_own_packageid": {
                  "type": "integer",
                  "description": ""
                },
                "must_have_launched_appid": {
                  "type": "integer",
                  "description": ""
                },
                "additional_restrictions": {
                  "type": "string",
                  "description": ""
                },
                "template_type": {
                  "type": "string",
                  "description": ""
                },
                "template_vars": {
                  "type": "string",
                  "description": ""
                },
                "flags": {
                  "type": "integer",
                  "description": ""
                },
                "creator_name": {
                  "type": "string",
                  "description": ""
                },
                "template_vars_json": {
                  "type": "string",
                  "description": ""
                },
                "additional_restrictions_json": {
                  "type": "string",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "from_json",
            "in": "query",
            "description": "If set, then overwrite the template_vars and additional_restrictions keyvalues from json",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMobileAppService/GetMobileSummary/v1": {
      "post": {
        "summary": "GetMobileSummary operation of IMobileAppService",
        "description": "Performs the GetMobileSummary operation",
        "operationId": "IMobileAppService_GetMobileSummary",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authenticator_gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMobileAuthService/MigrateMobileSession/v1": {
      "post": {
        "summary": "MigrateMobileSession operation of IMobileAuthService",
        "description": "Performs the MigrateMobileSession operation",
        "operationId": "IMobileAuthService_MigrateMobileSession",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device_details",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "device_friendly_name": {
                  "type": "string",
                  "description": ""
                },
                "platform_type": {
                  "type": "integer",
                  "description": ""
                },
                "os_type": {
                  "type": "integer",
                  "description": ""
                },
                "gaming_device_type": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMobileDeviceService/DeregisterMobileDevice/v1": {
      "post": {
        "summary": "DeregisterMobileDevice operation of IMobileDeviceService",
        "description": "Performs the DeregisterMobileDevice operation",
        "operationId": "IMobileDeviceService_DeregisterMobileDevice",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IMobileDeviceService/RegisterMobileDevice/v1": {
      "post": {
        "summary": "RegisterMobileDevice operation of IMobileDeviceService",
        "description": "Performs the RegisterMobileDevice operation",
        "operationId": "IMobileDeviceService_RegisterMobileDevice",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_enabled",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "app_version",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "os_version",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device_model",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "twofactor_device_identifier",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile_app",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/INewsService/PublishPartnerEvent/v1": {
      "post": {
        "summary": "PublishPartnerEvent operation of INewsService",
        "description": "Performs the PublishPartnerEvent operation",
        "operationId": "INewsService_PublishPartnerEvent",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "post",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "gid": {
                  "type": "integer",
                  "description": ""
                },
                "news_feed_gid": {
                  "type": "integer",
                  "description": ""
                },
                "title": {
                  "type": "string",
                  "description": ""
                },
                "url": {
                  "type": "string",
                  "description": ""
                },
                "author": {
                  "type": "string",
                  "description": ""
                },
                "rtime_date": {
                  "type": "integer",
                  "description": ""
                },
                "contents": {
                  "type": "string",
                  "description": ""
                },
                "commited": {
                  "type": "boolean",
                  "description": ""
                },
                "deleted": {
                  "type": "boolean",
                  "description": ""
                },
                "tags": {
                  "type": "string",
                  "description": ""
                },
                "appids[0]": {
                  "type": "uint32[]",
                  "description": ""
                },
                "recommendation_state": {
                  "type": "integer",
                  "description": ""
                },
                "received_compensation": {
                  "type": "boolean",
                  "description": ""
                },
                "received_for_free": {
                  "type": "boolean",
                  "description": ""
                },
                "blurb": {
                  "type": "string",
                  "description": ""
                },
                "event_subtitle": {
                  "type": "string",
                  "description": ""
                },
                "event_summary": {
                  "type": "string",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "draft",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IParentalService/ApproveFeatureAccess/v1": {
      "post": {
        "summary": "Approve or deny temporary access to a feature from a child account",
        "description": "Performs the ApproveFeatureAccess operation",
        "operationId": "IParentalService_ApproveFeatureAccess",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approve",
            "in": "query",
            "description": "Approve or deny temporary access to a feature from a child account",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "requestid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "features",
            "in": "query",
            "description": "Approve or deny temporary access to a feature from a child account",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Approve or deny temporary access to a feature from a child account",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IParentalService/ApprovePlaytime/v1": {
      "post": {
        "summary": "Approve or deny a temporary playtime request from a child account",
        "description": "Performs the ApprovePlaytime operation",
        "operationId": "IParentalService_ApprovePlaytime",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approve",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "requestid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "restrictions_approved",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "restrictions": {
                  "type": "parentalplaytimeday",
                  "description": ""
                },
                "rtime_expires": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IParentalService/DisableParentalSettings/v1": {
      "post": {
        "summary": "Disable parental settings for the logged in account",
        "description": "Performs the DisableParentalSettings operation",
        "operationId": "IParentalService_DisableParentalSettings",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IParentalService/EnableParentalSettings/v1": {
      "post": {
        "summary": "Enable parental settings for the logged in account, optionally setting the current settings",
        "description": "Performs the EnableParentalSettings operation",
        "operationId": "IParentalService_EnableParentalSettings",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "settings",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "steamid": {
                  "type": "integer",
                  "description": ""
                },
                "applist_base_id": {
                  "type": "integer",
                  "description": ""
                },
                "applist_base_description": {
                  "type": "string",
                  "description": ""
                },
                "applist_base[0]": {
                  "type": "parentalapp[]",
                  "description": ""
                },
                "applist_custom[0]": {
                  "type": "parentalapp[]",
                  "description": ""
                },
                "passwordhashtype": {
                  "type": "integer",
                  "description": ""
                },
                "salt": {
                  "type": "string",
                  "description": ""
                },
                "passwordhash": {
                  "type": "string",
                  "description": ""
                },
                "is_enabled": {
                  "type": "boolean",
                  "description": ""
                },
                "enabled_features": {
                  "type": "integer",
                  "description": ""
                },
                "recovery_email": {
                  "type": "string",
                  "description": ""
                },
                "is_site_license_lock": {
                  "type": "boolean",
                  "description": ""
                },
                "temporary_enabled_features": {
                  "type": "integer",
                  "description": ""
                },
                "rtime_temporary_feature_expiration": {
                  "type": "integer",
                  "description": ""
                },
                "playtime_restrictions": {
                  "type": "parentalplaytimerestrictions",
                  "description": ""
                },
                "temporary_playtime_restrictions": {
                  "type": "parentaltemporaryplaytimerestrictions",
                  "description": ""
                },
                "excluded_store_content_descriptors[0]": {
                  "type": "uint32[]",
                  "description": ""
                },
                "excluded_community_content_descriptors[0]": {
                  "type": "uint32[]",
                  "description": ""
                },
                "utility_appids[0]": {
                  "type": "uint32[]",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "sessionid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enablecode",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IParentalService/LockClient/v1": {
      "post": {
        "summary": "Notify connected clients that a lock has occurred in a browser",
        "description": "Performs the LockClient operation",
        "operationId": "IParentalService_LockClient",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IParentalService/RequestFeatureAccess/v1": {
      "post": {
        "summary": "Request temporary access to a feature from a parent account",
        "description": "Performs the RequestFeatureAccess operation",
        "operationId": "IParentalService_RequestFeatureAccess",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "features",
            "in": "query",
            "description": "Request temporary access to a feature from a parent account",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IParentalService/RequestPlaytime/v1": {
      "post": {
        "summary": "Request temporary additional playtime from a parent account",
        "description": "Performs the RequestPlaytime operation",
        "operationId": "IParentalService_RequestPlaytime",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time_expires",
            "in": "query",
            "description": "Request temporary additional playtime from a parent account",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "current_playtime_restrictions",
            "in": "query",
            "description": "Request temporary additional playtime from a parent account",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "allowed_time_windows": {
                  "type": "integer",
                  "description": ""
                },
                "allowed_daily_minutes": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IParentalService/RequestRecoveryCode/v1": {
      "post": {
        "summary": "Request a recovery code be sent to the recovery email address for the specified account",
        "description": "Performs the RequestRecoveryCode operation",
        "operationId": "IParentalService_RequestRecoveryCode",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IParentalService/SetParentalSettings/v1": {
      "post": {
        "summary": "Set the current parental settings for the logged in account",
        "description": "Performs the SetParentalSettings operation",
        "operationId": "IParentalService_SetParentalSettings",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "settings",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "steamid": {
                  "type": "integer",
                  "description": ""
                },
                "applist_base_id": {
                  "type": "integer",
                  "description": ""
                },
                "applist_base_description": {
                  "type": "string",
                  "description": ""
                },
                "applist_base[0]": {
                  "type": "parentalapp[]",
                  "description": ""
                },
                "applist_custom[0]": {
                  "type": "parentalapp[]",
                  "description": ""
                },
                "passwordhashtype": {
                  "type": "integer",
                  "description": ""
                },
                "salt": {
                  "type": "string",
                  "description": ""
                },
                "passwordhash": {
                  "type": "string",
                  "description": ""
                },
                "is_enabled": {
                  "type": "boolean",
                  "description": ""
                },
                "enabled_features": {
                  "type": "integer",
                  "description": ""
                },
                "recovery_email": {
                  "type": "string",
                  "description": ""
                },
                "is_site_license_lock": {
                  "type": "boolean",
                  "description": ""
                },
                "temporary_enabled_features": {
                  "type": "integer",
                  "description": ""
                },
                "rtime_temporary_feature_expiration": {
                  "type": "integer",
                  "description": ""
                },
                "playtime_restrictions": {
                  "type": "parentalplaytimerestrictions",
                  "description": ""
                },
                "temporary_playtime_restrictions": {
                  "type": "parentaltemporaryplaytimerestrictions",
                  "description": ""
                },
                "excluded_store_content_descriptors[0]": {
                  "type": "uint32[]",
                  "description": ""
                },
                "excluded_community_content_descriptors[0]": {
                  "type": "uint32[]",
                  "description": ""
                },
                "utility_appids[0]": {
                  "type": "uint32[]",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "new_password",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sessionid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IParentalService/ValidatePassword/v1": {
      "post": {
        "summary": "Validate the plaintext password for the logged in account and return an unlock token",
        "description": "Performs the ValidatePassword operation",
        "operationId": "IParentalService_ValidatePassword",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "send_unlock_on_success",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IParentalService/ValidateToken/v1": {
      "post": {
        "summary": "Check if the given parental unlock token is correct for the logged in account",
        "description": "Performs the ValidateToken operation",
        "operationId": "IParentalService_ValidateToken",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unlock_token",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPartnerAppNotesService/CreateNotes/v1": {
      "post": {
        "summary": "CreateNotes operation of IPartnerAppNotesService",
        "description": "Performs the CreateNotes operation",
        "operationId": "IPartnerAppNotesService_CreateNotes",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "partner_notes",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "admin_notes",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partner_readonly_notes",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPartnerAppNotesService/UpdateNotes/v1": {
      "post": {
        "summary": "UpdateNotes operation of IPartnerAppNotesService",
        "description": "Performs the UpdateNotes operation",
        "operationId": "IPartnerAppNotesService_UpdateNotes",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "partner_notes",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "admin_notes",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partner_readonly_notes",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPartnerDismissService/CreateDismiss/v1": {
      "post": {
        "summary": "CreateDismiss operation of IPartnerDismissService",
        "description": "Performs the CreateDismiss operation",
        "operationId": "IPartnerDismissService_CreateDismiss",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dismiss_list[0]",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "state": {
                  "type": "integer",
                  "description": ""
                },
                "accountid": {
                  "type": "integer",
                  "description": ""
                },
                "key_json": {
                  "type": "string",
                  "description": ""
                },
                "partnerid": {
                  "type": "integer",
                  "description": ""
                },
                "rtime_create": {
                  "type": "integer",
                  "description": ""
                },
                "rtime_validity": {
                  "type": "integer",
                  "description": ""
                },
                "dismiss_id": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPartnerDismissService/DeleteDismiss/v1": {
      "post": {
        "summary": "DeleteDismiss operation of IPartnerDismissService",
        "description": "Performs the DeleteDismiss operation",
        "operationId": "IPartnerDismissService_DeleteDismiss",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dismiss_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPhoneService/ConfirmAddPhoneToAccount/v1": {
      "post": {
        "summary": "ConfirmAddPhoneToAccount operation of IPhoneService",
        "description": "Performs the ConfirmAddPhoneToAccount operation",
        "operationId": "IPhoneService_ConfirmAddPhoneToAccount",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "stoken",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPhoneService/IsAccountWaitingForEmailConfirmation/v1": {
      "post": {
        "summary": "IsAccountWaitingForEmailConfirmation operation of IPhoneService",
        "description": "Performs the IsAccountWaitingForEmailConfirmation operation",
        "operationId": "IPhoneService_IsAccountWaitingForEmailConfirmation",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPhoneService/SendPhoneVerificationCode/v1": {
      "post": {
        "summary": "SendPhoneVerificationCode operation of IPhoneService",
        "description": "Performs the SendPhoneVerificationCode operation",
        "operationId": "IPhoneService_SendPhoneVerificationCode",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPhoneService/SetAccountPhoneNumber/v1": {
      "post": {
        "summary": "SetAccountPhoneNumber operation of IPhoneService",
        "description": "Performs the SetAccountPhoneNumber operation",
        "operationId": "IPhoneService_SetAccountPhoneNumber",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone_number",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone_country_code",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPhoneService/VerifyAccountPhoneWithCode/v1": {
      "post": {
        "summary": "VerifyAccountPhoneWithCode operation of IPhoneService",
        "description": "Performs the VerifyAccountPhoneWithCode operation",
        "operationId": "IPhoneService_VerifyAccountPhoneWithCode",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/AddFriend/v1": {
      "post": {
        "summary": "Invites another Steam user to be a friend",
        "description": "Performs the AddFriend operation",
        "operationId": "IPlayerService_AddFriend",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "Steam ID of user to whom to send a friend invite.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/GetAchievementsProgress/v1": {
      "post": {
        "summary": "Gets the achievement completion stats for the specified list of apps.",
        "description": "Performs the GetAchievementsProgress operation",
        "operationId": "IPlayerService_GetAchievementsProgress",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appids",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "include_unvetted_apps",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/GetCommunityPreferences/v1": {
      "post": {
        "summary": "Returns the player's community preferences",
        "description": "Performs the GetCommunityPreferences operation",
        "operationId": "IPlayerService_GetCommunityPreferences",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/GetRecentPlaytimeSessionsForChild/v1": {
      "post": {
        "summary": "GetRecentPlaytimeSessionsForChild operation of IPlayerService",
        "description": "Performs the GetRecentPlaytimeSessionsForChild operation",
        "operationId": "IPlayerService_GetRecentPlaytimeSessionsForChild",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/GetSingleGamePlaytime/v1": {
      "get": {
        "summary": "GetSingleGamePlaytime operation of IPlayerService",
        "description": "Performs the GetSingleGamePlaytime operation",
        "operationId": "IPlayerService_GetSingleGamePlaytime",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Steamworks Web API user authentication key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "The player we're asking about",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "AppID that we're getting playtime for",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/IgnoreFriend/v1": {
      "post": {
        "summary": "Blocks or unblocks communication with the user.  Despite name, can be a non-friend.",
        "description": "Performs the IgnoreFriend operation",
        "operationId": "IPlayerService_IgnoreFriend",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "unignore",
            "in": "query",
            "description": "If set, remove from ignore/block list instead of adding",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/RemoveFriend/v1": {
      "post": {
        "summary": "Removes a friend or ignores a friend suggestion",
        "description": "Performs the RemoveFriend operation",
        "operationId": "IPlayerService_RemoveFriend",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "Steam ID of friend to remove.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/SetAnimatedAvatar/v1": {
      "post": {
        "summary": "Sets the user's animated avatar for their profile",
        "description": "Performs the SetAnimatedAvatar operation",
        "operationId": "IPlayerService_SetAnimatedAvatar",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "communityitemid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/SetAvatarFrame/v1": {
      "post": {
        "summary": "Sets the user's avatar frame for their profile",
        "description": "Performs the SetAvatarFrame operation",
        "operationId": "IPlayerService_SetAvatarFrame",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "communityitemid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/SetEquippedProfileItemFlags/v1": {
      "post": {
        "summary": "Sets special flags on the equipped item",
        "description": "Performs the SetEquippedProfileItemFlags operation",
        "operationId": "IPlayerService_SetEquippedProfileItemFlags",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "communityitemid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "flags",
            "in": "query",
            "description": "Set of EProfileItemEquippedFlag",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/SetFavoriteBadge/v1": {
      "post": {
        "summary": "Sets the badge  as the users favorite",
        "description": "Performs the SetFavoriteBadge operation",
        "operationId": "IPlayerService_SetFavoriteBadge",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "communityitemid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "badgeid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/SetMiniProfileBackground/v1": {
      "post": {
        "summary": "Sets the user's mini profile background",
        "description": "Performs the SetMiniProfileBackground operation",
        "operationId": "IPlayerService_SetMiniProfileBackground",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "communityitemid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/SetProfileBackground/v1": {
      "post": {
        "summary": "Sets the user's profile background",
        "description": "Performs the SetProfileBackground operation",
        "operationId": "IPlayerService_SetProfileBackground",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "communityitemid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/SetProfilePreferences/v1": {
      "post": {
        "summary": "Sets profile preferences",
        "description": "Performs the SetProfilePreferences operation",
        "operationId": "IPlayerService_SetProfilePreferences",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profile_preferences",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "hide_profile_awards": {
                  "type": "boolean",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/SetProfileTheme/v1": {
      "post": {
        "summary": "Selects a theme for the profile",
        "description": "Performs the SetProfileTheme operation",
        "operationId": "IPlayerService_SetProfileTheme",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "theme_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlayerService/SetSteamDeckKeyboardSkin/v1": {
      "post": {
        "summary": "Sets the user's current Steam Deck keyboard skin",
        "description": "Performs the SetSteamDeckKeyboardSkin operation",
        "operationId": "IPlayerService_SetSteamDeckKeyboardSkin",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "communityitemid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlaytestService/GetInvites/v1": {
      "post": {
        "summary": "GetInvites operation of IPlaytestService",
        "description": "Performs the GetInvites operation",
        "operationId": "IPlaytestService_GetInvites",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invite_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPlaytestService/UpdateInvites/v1": {
      "post": {
        "summary": "UpdateInvites operation of IPlaytestService",
        "description": "Performs the UpdateInvites operation",
        "operationId": "IPlaytestService_UpdateInvites",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invite_ids",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionEventInvitesService/AcceptInvite/v1": {
      "post": {
        "summary": "AcceptInvite operation of IPromotionEventInvitesService",
        "description": "Performs the AcceptInvite operation",
        "operationId": "IPromotionEventInvitesService_AcceptInvite",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inviteid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "rtdatechosen",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "discount_days",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "discount_info",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip_discount_event",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionEventInvitesService/CancelInvite/v1": {
      "post": {
        "summary": "CancelInvite operation of IPromotionEventInvitesService",
        "description": "Performs the CancelInvite operation",
        "operationId": "IPromotionEventInvitesService_CancelInvite",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inviteid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionEventInvitesService/GetEmailTargets/v1": {
      "post": {
        "summary": "GetEmailTargets operation of IPromotionEventInvitesService",
        "description": "Performs the GetEmailTargets operation",
        "operationId": "IPromotionEventInvitesService_GetEmailTargets",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inviteid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionEventInvitesService/ResendEmailInvite/v1": {
      "post": {
        "summary": "ResendEmailInvite operation of IPromotionEventInvitesService",
        "description": "Performs the ResendEmailInvite operation",
        "operationId": "IPromotionEventInvitesService_ResendEmailInvite",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inviteid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "only_notify_additional_email",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionEventInvitesService/SetInvite/v1": {
      "post": {
        "summary": "SetInvite operation of IPromotionEventInvitesService",
        "description": "Performs the SetInvite operation",
        "operationId": "IPromotionEventInvitesService_SetInvite",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invite",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "inviteid": {
                  "type": "integer",
                  "description": ""
                },
                "appid": {
                  "type": "integer",
                  "description": ""
                },
                "invite_account": {
                  "type": "integer",
                  "description": ""
                },
                "rtinvitetime": {
                  "type": "integer",
                  "description": ""
                },
                "rtexpiretime": {
                  "type": "integer",
                  "description": ""
                },
                "type": {
                  "type": "integer",
                  "description": ""
                },
                "accept_account": {
                  "type": "integer",
                  "description": ""
                },
                "rtaccepttime": {
                  "type": "integer",
                  "description": ""
                },
                "rtdatechosen": {
                  "type": "integer",
                  "description": ""
                },
                "discount_eventid": {
                  "type": "integer",
                  "description": ""
                },
                "packageid": {
                  "type": "integer",
                  "description": ""
                },
                "bundleid": {
                  "type": "integer",
                  "description": ""
                },
                "primary_partnerid": {
                  "type": "integer",
                  "description": ""
                },
                "deadlines": {
                  "type": "cpromotionrequirements",
                  "description": ""
                },
                "notify_partner": {
                  "type": "boolean",
                  "description": ""
                },
                "additional_email[0]": {
                  "type": "string[]",
                  "description": ""
                },
                "promotion_id": {
                  "type": "string",
                  "description": ""
                },
                "cancelled": {
                  "type": "boolean",
                  "description": ""
                },
                "rtime32_cancel_time": {
                  "type": "integer",
                  "description": ""
                },
                "require_sale_page": {
                  "type": "boolean",
                  "description": ""
                },
                "require_sale_page_type": {
                  "type": "integer",
                  "description": ""
                },
                "admin_notes": {
                  "type": "string",
                  "description": ""
                },
                "partner_notes": {
                  "type": "string",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "queue_email_to_send",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionPlanningService/CreatePlan/v1": {
      "post": {
        "summary": "CreatePlan operation of IPromotionPlanningService",
        "description": "Performs the CreatePlan operation",
        "operationId": "IPromotionPlanningService_CreatePlan",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plan",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "promotion_id": {
                  "type": "integer",
                  "description": ""
                },
                "admin_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "partner_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "input_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "rtime32_start_time": {
                  "type": "integer",
                  "description": ""
                },
                "rtime32_end_time": {
                  "type": "integer",
                  "description": ""
                },
                "partner_id": {
                  "type": "integer",
                  "description": ""
                },
                "input_access_key": {
                  "type": "string",
                  "description": ""
                },
                "last_update_time": {
                  "type": "integer",
                  "description": ""
                },
                "partner_readonly_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "partner_writable_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "assets_readonly_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "assets_writable_jsondata": {
                  "type": "string",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionPlanningService/CreateSalePageForPromo/v1": {
      "post": {
        "summary": "CreateSalePageForPromo operation of IPromotionPlanningService",
        "description": "Performs the CreateSalePageForPromo operation",
        "operationId": "IPromotionPlanningService_CreateSalePageForPromo",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clan_account_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "clan_event_gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "rtime_sale_start",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "rtime_sale_end",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "daily_deal_gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "promotion_gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "create_asset_request",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "partner_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "advertising_appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionPlanningService/CreateTentativePlan/v1": {
      "post": {
        "summary": "CreateTentativePlan operation of IPromotionPlanningService",
        "description": "Performs the CreateTentativePlan operation",
        "operationId": "IPromotionPlanningService_CreateTentativePlan",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plan",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "promotion_id": {
                  "type": "integer",
                  "description": ""
                },
                "admin_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "partner_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "input_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "rtime32_start_time": {
                  "type": "integer",
                  "description": ""
                },
                "rtime32_end_time": {
                  "type": "integer",
                  "description": ""
                },
                "partner_id": {
                  "type": "integer",
                  "description": ""
                },
                "input_access_key": {
                  "type": "string",
                  "description": ""
                },
                "last_update_time": {
                  "type": "integer",
                  "description": ""
                },
                "partner_readonly_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "partner_writable_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "assets_readonly_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "assets_writable_jsondata": {
                  "type": "string",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionPlanningService/DeletePlan/v1": {
      "post": {
        "summary": "DeletePlan operation of IPromotionPlanningService",
        "description": "Performs the DeletePlan operation",
        "operationId": "IPromotionPlanningService_DeletePlan",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotion_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionPlanningService/MarkLocalizationAssetComplete/v1": {
      "post": {
        "summary": "MarkLocalizationAssetComplete operation of IPromotionPlanningService",
        "description": "Performs the MarkLocalizationAssetComplete operation",
        "operationId": "IPromotionPlanningService_MarkLocalizationAssetComplete",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotion_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionPlanningService/SendNotification/v1": {
      "post": {
        "summary": "SendNotification operation of IPromotionPlanningService",
        "description": "Performs the SendNotification operation",
        "operationId": "IPromotionPlanningService_SendNotification",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotion_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "notification_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "only_explicit_email_addresses",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionPlanningService/UpdatePlan/v1": {
      "post": {
        "summary": "UpdatePlan operation of IPromotionPlanningService",
        "description": "Performs the UpdatePlan operation",
        "operationId": "IPromotionPlanningService_UpdatePlan",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plan",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "promotion_id": {
                  "type": "integer",
                  "description": ""
                },
                "admin_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "partner_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "input_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "rtime32_start_time": {
                  "type": "integer",
                  "description": ""
                },
                "rtime32_end_time": {
                  "type": "integer",
                  "description": ""
                },
                "partner_id": {
                  "type": "integer",
                  "description": ""
                },
                "input_access_key": {
                  "type": "string",
                  "description": ""
                },
                "last_update_time": {
                  "type": "integer",
                  "description": ""
                },
                "partner_readonly_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "partner_writable_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "assets_readonly_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "assets_writable_jsondata": {
                  "type": "string",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "promotion_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionPlanningService/UpdatePlanInputData/v1": {
      "post": {
        "summary": "UpdatePlanInputData operation of IPromotionPlanningService",
        "description": "Performs the UpdatePlanInputData operation",
        "operationId": "IPromotionPlanningService_UpdatePlanInputData",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plan",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "promotion_id": {
                  "type": "integer",
                  "description": ""
                },
                "admin_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "partner_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "input_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "rtime32_start_time": {
                  "type": "integer",
                  "description": ""
                },
                "rtime32_end_time": {
                  "type": "integer",
                  "description": ""
                },
                "partner_id": {
                  "type": "integer",
                  "description": ""
                },
                "input_access_key": {
                  "type": "string",
                  "description": ""
                },
                "last_update_time": {
                  "type": "integer",
                  "description": ""
                },
                "partner_readonly_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "partner_writable_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "assets_readonly_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "assets_writable_jsondata": {
                  "type": "string",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "promotion_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPromotionPlanningService/UpdatePlanPartnerInfo/v1": {
      "post": {
        "summary": "UpdatePlanPartnerInfo operation of IPromotionPlanningService",
        "description": "Performs the UpdatePlanPartnerInfo operation",
        "operationId": "IPromotionPlanningService_UpdatePlanPartnerInfo",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plan",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "promotion_id": {
                  "type": "integer",
                  "description": ""
                },
                "admin_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "partner_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "input_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "rtime32_start_time": {
                  "type": "integer",
                  "description": ""
                },
                "rtime32_end_time": {
                  "type": "integer",
                  "description": ""
                },
                "partner_id": {
                  "type": "integer",
                  "description": ""
                },
                "input_access_key": {
                  "type": "string",
                  "description": ""
                },
                "last_update_time": {
                  "type": "integer",
                  "description": ""
                },
                "partner_readonly_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "partner_writable_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "assets_readonly_jsondata": {
                  "type": "string",
                  "description": ""
                },
                "assets_writable_jsondata": {
                  "type": "string",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "promotion_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPublishedFileService/Publish/v1": {
      "post": {
        "summary": "Publishes a clouded user file to the Workshop.",
        "description": "Performs the Publish operation",
        "operationId": "IPublishedFileService_Publish",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "App Id this file is being published FROM.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "consumer_appid",
            "in": "query",
            "description": "App Id this file is being published TO.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cloudfilename",
            "in": "query",
            "description": "Name of the file to publish in the user's cloud.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preview_cloudfilename",
            "in": "query",
            "description": "Name of the file to use as the published file's preview.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Text title for the published file.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_description",
            "in": "query",
            "description": "Text description for the published file.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_type",
            "in": "query",
            "description": "(EWorkshopFileType) Type of Workshop file to publish.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "consumer_shortcut_name",
            "in": "query",
            "description": "Shortcut name for the published file.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "youtube_username",
            "in": "query",
            "description": "User's YouTube account username.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "youtube_videoid",
            "in": "query",
            "description": "Video Id of a YouTube video for this published file.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "visibility",
            "in": "query",
            "description": "(ERemoteStoragePublishedFileVisibility) Visibility of the published file (private, friends, public, etc.)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "description": "If supplied, the resulting published file's Id is appended to the URI.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Array of text tags to apply to the published file.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "collection_type",
            "in": "query",
            "description": "Type of collection the published file represents.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "game_type",
            "in": "query",
            "description": "Type of game the published file represents.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "If this represents a game, this is the URL to that game's page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPublishedFileService/Subscribe/v1": {
      "post": {
        "summary": "Subscribes the user to the published file",
        "description": "Performs the Subscribe operation",
        "operationId": "IPublishedFileService_Subscribe",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publishedfileid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "list_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "notify_client",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_dependencies",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPublishedFileService/Unsubscribe/v1": {
      "post": {
        "summary": "Unsubscribes the user from the published file",
        "description": "Performs the Unsubscribe operation",
        "operationId": "IPublishedFileService_Unsubscribe",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publishedfileid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "list_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "notify_client",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPublishedFileService/Update/v1": {
      "post": {
        "summary": "Updates information about a published file.",
        "description": "Performs the Update operation",
        "operationId": "IPublishedFileService_Update",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "App Id this published file belongs to.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "publishedfileid",
            "in": "query",
            "description": "Published file id of the file we'd like update.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title of the published file.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_description",
            "in": "query",
            "description": "Description of the published file.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "visibility",
            "in": "query",
            "description": "Visibility of the published file.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Set of tags for the published file.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filename",
            "in": "query",
            "description": "Filename for the published file.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preview_filename",
            "in": "query",
            "description": "Preview filename for the published file.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spoiler_tag",
            "in": "query",
            "description": "Whether this published file should have a spoiler tag attached to it.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "image_width",
            "in": "query",
            "description": "If this is an image file, you can specify the image width.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "image_height",
            "in": "query",
            "description": "If this is an image file, you can specify the image height.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "If setting title & description, what language to set",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPublishingService/CreatePartnerAppOptInEmails/v1": {
      "post": {
        "summary": "CreatePartnerAppOptInEmails operation of IPublishingService",
        "description": "Performs the CreatePartnerAppOptInEmails operation",
        "operationId": "IPublishingService_CreatePartnerAppOptInEmails",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opt_in_name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targeting_flag",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "settings_flag",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "email_templates",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_rtime",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "end_rtime",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPublishingService/GetEstimatePartnerAppOptInEmail/v1": {
      "post": {
        "summary": "GetEstimatePartnerAppOptInEmail operation of IPublishingService",
        "description": "Performs the GetEstimatePartnerAppOptInEmail operation",
        "operationId": "IPublishingService_GetEstimatePartnerAppOptInEmail",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email_def_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPublishingService/GetOptInEmailTracking/v1": {
      "post": {
        "summary": "GetOptInEmailTracking operation of IPublishingService",
        "description": "Performs the GetOptInEmailTracking operation",
        "operationId": "IPublishingService_GetOptInEmailTracking",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email_def_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPublishingService/GetPartnerAppOptInEmailDefAndStats/v1": {
      "post": {
        "summary": "GetPartnerAppOptInEmailDefAndStats operation of IPublishingService",
        "description": "Performs the GetPartnerAppOptInEmailDefAndStats operation",
        "operationId": "IPublishingService_GetPartnerAppOptInEmailDefAndStats",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opt_in_name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPublishingService/SendPartnerOptInEmailAndWait/v1": {
      "post": {
        "summary": "SendPartnerOptInEmailAndWait operation of IPublishingService",
        "description": "Performs the SendPartnerOptInEmailAndWait operation",
        "operationId": "IPublishingService_SendPartnerOptInEmailAndWait",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email_def_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "force_resend",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPublishingService/SetFeaturingOnPartnerAppOptIn/v1": {
      "post": {
        "summary": "SetFeaturingOnPartnerAppOptIn operation of IPublishingService",
        "description": "Performs the SetFeaturingOnPartnerAppOptIn operation",
        "operationId": "IPublishingService_SetFeaturingOnPartnerAppOptIn",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appids",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "additional_featuring",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "opt_in_name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPublishingService/TestFirePartnerAppOptInEmail/v1": {
      "post": {
        "summary": "TestFirePartnerAppOptInEmail operation of IPublishingService",
        "description": "Performs the TestFirePartnerAppOptInEmail operation",
        "operationId": "IPublishingService_TestFirePartnerAppOptInEmail",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email_def_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "partnerid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IPublishingService/UpdatePartnerAppOptInEmails/v1": {
      "post": {
        "summary": "UpdatePartnerAppOptInEmails operation of IPublishingService",
        "description": "Performs the UpdatePartnerAppOptInEmails operation",
        "operationId": "IPublishingService_UpdatePartnerAppOptInEmails",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email_def_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "targeting_flag",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "settings_flag",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "email_templates",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_rtime",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "end_rtime",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "reviewed",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IQuestService/ActivateProfileModifierItem/v1": {
      "post": {
        "summary": "ActivateProfileModifierItem operation of IQuestService",
        "description": "Performs the ActivateProfileModifierItem operation",
        "operationId": "IQuestService_ActivateProfileModifierItem",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "communityitemid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "activate",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IQuestService/SetVirtualItemRewardDefinition/v1": {
      "post": {
        "summary": "SetVirtualItemRewardDefinition operation of IQuestService",
        "description": "Performs the SetVirtualItemRewardDefinition operation",
        "operationId": "IQuestService_SetVirtualItemRewardDefinition",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsdefs[0]",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "eventid": {
                  "type": "integer",
                  "description": ""
                },
                "item_bucket": {
                  "type": "integer",
                  "description": ""
                },
                "appid": {
                  "type": "integer",
                  "description": ""
                },
                "active": {
                  "type": "boolean",
                  "description": ""
                },
                "rarity": {
                  "type": "integer",
                  "description": ""
                },
                "package_to_grant": {
                  "type": "integer",
                  "description": ""
                },
                "game_item_id": {
                  "type": "integer",
                  "description": ""
                },
                "community_item_class": {
                  "type": "integer",
                  "description": ""
                },
                "community_item_type": {
                  "type": "integer",
                  "description": ""
                },
                "loyalty_point_type": {
                  "type": "integer",
                  "description": ""
                },
                "amount": {
                  "type": "integer",
                  "description": ""
                },
                "rtime_time_active": {
                  "type": "integer",
                  "description": ""
                },
                "loyalty_reward_defid": {
                  "type": "integer",
                  "description": ""
                },
                "user_badge_to_grant": {
                  "type": "integer",
                  "description": ""
                },
                "user_badge_level": {
                  "type": "integer",
                  "description": ""
                },
                "virtual_item_def_id": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IRemoteClientService/NotifyRegisterStatusUpdate/v1": {
      "post": {
        "summary": "Register for status updates with a Steam client",
        "description": "Performs the NotifyRegisterStatusUpdate operation",
        "operationId": "IRemoteClientService_NotifyRegisterStatusUpdate",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IRemoteClientService/NotifyRemotePacket/v1": {
      "post": {
        "summary": "Send a packet to a Steam client",
        "description": "Performs the NotifyRemotePacket operation",
        "operationId": "IRemoteClientService_NotifyRemotePacket",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "payload",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IRemoteClientService/NotifyUnregisterStatusUpdate/v1": {
      "post": {
        "summary": "Unregister for status updates with a Steam client",
        "description": "Performs the NotifyUnregisterStatusUpdate operation",
        "operationId": "IRemoteClientService_NotifyUnregisterStatusUpdate",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISaleFeatureService/GetUserSharingPermissions/v1": {
      "post": {
        "summary": "GetUserSharingPermissions operation of ISaleFeatureService",
        "description": "Performs the GetUserSharingPermissions operation",
        "operationId": "ISaleFeatureService_GetUserSharingPermissions",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISaleFeatureService/SetUserActionData/v1": {
      "post": {
        "summary": "SetUserActionData operation of ISaleFeatureService",
        "description": "Performs the SetUserActionData operation",
        "operationId": "ISaleFeatureService_SetUserActionData",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "gid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "jsondata",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISaleFeatureService/SetUserSharingPermissions/v1": {
      "post": {
        "summary": "SetUserSharingPermissions operation of ISaleFeatureService",
        "description": "Performs the SetUserSharingPermissions operation",
        "operationId": "ISaleFeatureService_SetUserSharingPermissions",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "privacy_state",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISaleItemRewardsService/ClaimItem/v1": {
      "post": {
        "summary": "ClaimItem operation of ISaleItemRewardsService",
        "description": "Performs the ClaimItem operation",
        "operationId": "ISaleItemRewardsService_ClaimItem",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISaleItemRewardsService/SetRewardDefinitions/v1": {
      "post": {
        "summary": "SetRewardDefinitions operation of ISaleItemRewardsService",
        "description": "Performs the SetRewardDefinitions operation",
        "operationId": "ISaleItemRewardsService_SetRewardDefinitions",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "definitions[0]",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "sale_reward_def_id": {
                  "type": "integer",
                  "description": ""
                },
                "appid": {
                  "type": "integer",
                  "description": ""
                },
                "virtual_item_reward_event_id": {
                  "type": "integer",
                  "description": ""
                },
                "rtime_start_time": {
                  "type": "integer",
                  "description": ""
                },
                "rtime_end_time": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IShoppingCartService/AddBundle/v1": {
      "post": {
        "summary": "AddBundle operation of IShoppingCartService",
        "description": "Performs the AddBundle operation",
        "operationId": "IShoppingCartService_AddBundle",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gidshoppingcart",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "browserid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "store_country",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "beta_mode",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IShoppingCartService/AddPackages/v1": {
      "post": {
        "summary": "AddPackages operation of IShoppingCartService",
        "description": "Performs the AddPackages operation",
        "operationId": "IShoppingCartService_AddPackages",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gidshoppingcart",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "browserid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "store_country_code",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beta_mode",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "cart_items[0]",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "packageid": {
                  "type": "integer",
                  "description": ""
                },
                "costwhenadded": {
                  "type": "cshoppingcart_amount",
                  "description": ""
                },
                "is_gift": {
                  "type": "boolean",
                  "description": ""
                },
                "gidbundle": {
                  "type": "integer",
                  "description": ""
                },
                "quantity": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IShoppingCartService/CreateNewShoppingCart/v1": {
      "post": {
        "summary": "CreateNewShoppingCart operation of IShoppingCartService",
        "description": "Performs the CreateNewShoppingCart operation",
        "operationId": "IShoppingCartService_CreateNewShoppingCart",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid_requester",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "purchase_request_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IShoppingCartService/RemoveLineItems/v1": {
      "post": {
        "summary": "RemoveLineItems operation of IShoppingCartService",
        "description": "Performs the RemoveLineItems operation",
        "operationId": "IShoppingCartService_RemoveLineItems",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gidshoppingcart",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "gidlineitems",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "browserid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IShoppingCartService/UpdatePackageQuantity/v1": {
      "post": {
        "summary": "UpdatePackageQuantity operation of IShoppingCartService",
        "description": "Performs the UpdatePackageQuantity operation",
        "operationId": "IShoppingCartService_UpdatePackageQuantity",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gidshoppingcart",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "gidlineitem",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISiteLicenseService/GetCurrentClientConnections/v1": {
      "get": {
        "summary": "GetCurrentClientConnections operation of ISiteLicenseService",
        "description": "Performs the GetCurrentClientConnections operation",
        "operationId": "ISiteLicenseService_GetCurrentClientConnections",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Steamworks Web API publisher authentication key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Site ID to see; zero for all sites",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISiteLicenseService/GetTotalPlaytime/v1": {
      "get": {
        "summary": "GetTotalPlaytime operation of ISiteLicenseService",
        "description": "Performs the GetTotalPlaytime operation",
        "operationId": "ISiteLicenseService_GetTotalPlaytime",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Steamworks Web API publisher authentication key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Report activity starting on or after this time. RFC 3339 UTC format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "Report activity starting before this time. RFC 3339 UTC format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Site ID to see; zero for all sites",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamBitPay/BitPayPaymentNotification/v1": {
      "post": {
        "summary": "BitPayPaymentNotification operation of ISteamBitPay",
        "description": "Performs the BitPayPaymentNotification operation",
        "operationId": "ISteamBitPay_BitPayPaymentNotification",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamBoaCompra/BoaCompraCheckTransactionStatus/v1": {
      "post": {
        "summary": "BoaCompraCheckTransactionStatus operation of ISteamBoaCompra",
        "description": "Performs the BoaCompraCheckTransactionStatus operation",
        "operationId": "ISteamBoaCompra_BoaCompraCheckTransactionStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamCloudGaming/GetSupportedApps/v1": {
      "get": {
        "summary": "GetSupportedApps operation of ISteamCloudGaming",
        "description": "Performs the GetSupportedApps operation",
        "operationId": "ISteamCloudGaming_GetSupportedApps",
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "description": "Cloud gaming platform name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Request extra details if supported",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamEnvoy/PaymentOutReversalNotification/v1": {
      "post": {
        "summary": "PaymentOutReversalNotification operation of ISteamEnvoy",
        "description": "Performs the PaymentOutReversalNotification operation",
        "operationId": "ISteamEnvoy_PaymentOutReversalNotification",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamLearnService/BatchOperation/v1": {
      "post": {
        "summary": "Batches multiple data updates, snapshots, and inference requests into a single call",
        "description": "Performs the BatchOperation operation",
        "operationId": "ISteamLearnService_BatchOperation",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "snapshot_requests",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "cmsgsteamlearn_snapshotproject_request"
            }
          },
          {
            "name": "inference_requests",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "cmsgsteamlearn_inference_request"
            }
          },
          {
            "name": "cache_data_requests[0]",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "description": ""
                },
                "data": {
                  "type": "cmsgsteamlearndata",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "snapshot_requests[0]",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "description": ""
                },
                "project_id": {
                  "type": "integer",
                  "description": ""
                },
                "published_version": {
                  "type": "integer",
                  "description": ""
                },
                "keys[0]": {
                  "type": "uint64[]",
                  "description": ""
                },
                "data[0]": {
                  "type": "cmsgsteamlearndata[]",
                  "description": ""
                },
                "pending_data_limit_seconds": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "inference_requests[0]",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "description": ""
                },
                "project_id": {
                  "type": "integer",
                  "description": ""
                },
                "published_version": {
                  "type": "integer",
                  "description": ""
                },
                "override_train_id": {
                  "type": "integer",
                  "description": ""
                },
                "data": {
                  "type": "cmsgsteamlearndatalist",
                  "description": ""
                },
                "additional_data[0]": {
                  "type": "float[]",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamLearnService/CacheData/v1": {
      "post": {
        "summary": "Updates a cached data entry.",
        "description": "Performs the CacheData operation",
        "operationId": "ISteamLearnService_CacheData",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_data",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "publisher_id": {
                  "type": "integer",
                  "description": ""
                },
                "timestamp": {
                  "type": "integer",
                  "description": ""
                },
                "random_value": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "data",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "data_source_id": {
                  "type": "integer",
                  "description": ""
                },
                "keys[0]": {
                  "type": "uint64[]",
                  "description": ""
                },
                "data_object": {
                  "type": "cmsgsteamlearndataobject",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamLearnService/CreateProject/v1": {
      "post": {
        "summary": "CreateProject operation of ISteamLearnService",
        "description": "Performs the CreateProject operation",
        "operationId": "ISteamLearnService_CreateProject",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_description",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamLearnService/EditProject/v1": {
      "post": {
        "summary": "EditProject operation of ISteamLearnService",
        "description": "Performs the EditProject operation",
        "operationId": "ISteamLearnService_EditProject",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "project_id": {
                  "type": "integer",
                  "description": ""
                },
                "project_name": {
                  "type": "string",
                  "description": ""
                },
                "project_description": {
                  "type": "string",
                  "description": ""
                },
                "creator_account_id": {
                  "type": "integer",
                  "description": ""
                },
                "create_time": {
                  "type": "integer",
                  "description": ""
                },
                "unpublished_config": {
                  "type": "cmsgsteamlearnprojectconfig",
                  "description": ""
                },
                "published_configs[0]": {
                  "type": "cmsgsteamlearnprojectconfig[]",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "published_version",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamLearnService/Inference/v1": {
      "post": {
        "summary": "Inferences using supplied data, or data associated with the specified key.",
        "description": "Performs the Inference operation",
        "operationId": "ISteamLearnService_Inference",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_data",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "publisher_id": {
                  "type": "integer",
                  "description": ""
                },
                "timestamp": {
                  "type": "integer",
                  "description": ""
                },
                "random_value": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "published_version",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "override_train_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "data",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "data[0]": {
                  "type": "cmsgsteamlearndata[]",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "additional_data",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "keys",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "named_inference",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamLearnService/InferenceBackend/v1": {
      "post": {
        "summary": "InferenceBackend operation of ISteamLearnService",
        "description": "Performs the InferenceBackend operation",
        "operationId": "ISteamLearnService_InferenceBackend",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fetch_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "train_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "additional_data",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "keys",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "data[0]",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "float_value": {
                  "type": "number",
                  "description": ""
                },
                "string_value": {
                  "type": "string",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "named_inference",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamLearnService/InferenceMetadata/v1": {
      "post": {
        "summary": "Requests the metadata that was generated from a specified fetch.",
        "description": "Performs the InferenceMetadata operation",
        "operationId": "ISteamLearnService_InferenceMetadata",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_data",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "publisher_id": {
                  "type": "integer",
                  "description": ""
                },
                "timestamp": {
                  "type": "integer",
                  "description": ""
                },
                "random_value": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "published_version",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "override_train_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamLearnService/PublishProject/v1": {
      "post": {
        "summary": "PublishProject operation of ISteamLearnService",
        "description": "Performs the PublishProject operation",
        "operationId": "ISteamLearnService_PublishProject",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamLearnService/RegisterDataSource/v1": {
      "post": {
        "summary": "Registers a data desc (or finds a data desc if it's already registered).",
        "description": "Performs the RegisterDataSource operation",
        "operationId": "ISteamLearnService_RegisterDataSource",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_data",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "publisher_id": {
                  "type": "integer",
                  "description": ""
                },
                "timestamp": {
                  "type": "integer",
                  "description": ""
                },
                "random_value": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "data_source",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "version": {
                  "type": "integer",
                  "description": ""
                },
                "source_description": {
                  "type": "string",
                  "description": ""
                },
                "structure": {
                  "type": "cmsgsteamlearndatasourcedescobject",
                  "description": ""
                },
                "structure_crc": {
                  "type": "integer",
                  "description": ""
                },
                "cache_duration_seconds": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamLearnService/SnapshotProject/v1": {
      "post": {
        "summary": "Snapshots the current data for a project.",
        "description": "Performs the SnapshotProject operation",
        "operationId": "ISteamLearnService_SnapshotProject",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_data",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "publisher_id": {
                  "type": "integer",
                  "description": ""
                },
                "timestamp": {
                  "type": "integer",
                  "description": ""
                },
                "random_value": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "published_version",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "keys",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "data",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "cmsgsteamlearndata"
            }
          },
          {
            "name": "pending_data_limit_seconds",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "data[0]",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "data_source_id": {
                  "type": "integer",
                  "description": ""
                },
                "keys[0]": {
                  "type": "uint64[]",
                  "description": ""
                },
                "data_object": {
                  "type": "cmsgsteamlearndataobject",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamNodwin/NodwinPaymentNotification/v1": {
      "post": {
        "summary": "NodwinPaymentNotification operation of ISteamNodwin",
        "description": "Performs the NodwinPaymentNotification operation",
        "operationId": "ISteamNodwin_NodwinPaymentNotification",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamNotificationService/HideNotification/v1": {
      "post": {
        "summary": "HideNotification operation of ISteamNotificationService",
        "description": "Performs the HideNotification operation",
        "operationId": "ISteamNotificationService_HideNotification",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notification_ids",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamNotificationService/MarkNotificationsRead/v1": {
      "post": {
        "summary": "MarkNotificationsRead operation of ISteamNotificationService",
        "description": "Performs the MarkNotificationsRead operation",
        "operationId": "ISteamNotificationService_MarkNotificationsRead",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "notification_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "notification_ids",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "mark_all_read",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamNotificationService/MarkNotificationsViewed/v1": {
      "post": {
        "summary": "MarkNotificationsViewed operation of ISteamNotificationService",
        "description": "Performs the MarkNotificationsViewed operation",
        "operationId": "ISteamNotificationService_MarkNotificationsViewed",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamNotificationService/SetPreferences/v1": {
      "post": {
        "summary": "SetPreferences operation of ISteamNotificationService",
        "description": "Performs the SetPreferences operation",
        "operationId": "ISteamNotificationService_SetPreferences",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preferences[0]",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "notification_type": {
                  "type": "integer",
                  "description": ""
                },
                "notification_targets": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamPayPalPaymentsHub/PayPalPaymentsHubPaymentNotification/v1": {
      "post": {
        "summary": "PayPalPaymentsHubPaymentNotification operation of ISteamPayPalPaymentsHub",
        "description": "Performs the PayPalPaymentsHubPaymentNotification operation",
        "operationId": "ISteamPayPalPaymentsHub_PayPalPaymentsHubPaymentNotification",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/AddChatBan/v1": {
      "post": {
        "summary": "Set the ban for a specific broadcaster. The issuer is the logged in steam account",
        "description": "Performs the AddChatBan operation",
        "operationId": "ISteamTVService_AddChatBan",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_channel_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "chatter_steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "permanent",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "undo",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/AddChatModerator/v1": {
      "post": {
        "summary": "Add or remove a moderator for this broadcast channel",
        "description": "Performs the AddChatModerator operation",
        "operationId": "ISteamTVService_AddChatModerator",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_channel_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "moderator_steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "undo",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/AddWordBan/v1": {
      "post": {
        "summary": "Add or remove a banned keyword in this broadcast channel chat",
        "description": "Performs the AddWordBan operation",
        "operationId": "ISteamTVService_AddWordBan",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_channel_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "word",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "undo",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/AppCheer/v1": {
      "post": {
        "summary": "The user is cheering for a specific broadcast for a specific app.",
        "description": "Performs the AppCheer operation",
        "operationId": "ISteamTVService_AppCheer",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "App ID this cheer is for.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cheer_target_id",
            "in": "query",
            "description": "The thing being cheered on. ID is app dependent (could be steam id, match id, lobby id, server id, etc).",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cheers[0]",
            "in": "query",
            "description": "The set of cheers this request represents (could be multiple of different types).",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "cheer_type": {
                  "type": "integer",
                  "description": ""
                },
                "cheer_amount": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/CreateBroadcastChannel/v1": {
      "post": {
        "summary": "Create a channel on SteamTV",
        "description": "Performs the CreateBroadcastChannel operation",
        "operationId": "ISteamTVService_CreateBroadcastChannel",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unique_name",
            "in": "query",
            "description": "Unique short broadcast channel name, part of Steam.TV URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/FollowBroadcastChannel/v1": {
      "post": {
        "summary": "Follow a broadcast channel",
        "description": "Performs the FollowBroadcastChannel operation",
        "operationId": "ISteamTVService_FollowBroadcastChannel",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_channel_id",
            "in": "query",
            "description": "Broadcast channel ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "undo",
            "in": "query",
            "description": "Indicates this is an unfollow request",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/JoinChat/v1": {
      "post": {
        "summary": "Joins the chat channel for a broadcast",
        "description": "Performs the JoinChat operation",
        "operationId": "ISteamTVService_JoinChat",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_channel_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/ReportBroadcastChannel/v1": {
      "post": {
        "summary": "Report a broadcast channel",
        "description": "Performs the ReportBroadcastChannel operation",
        "operationId": "ISteamTVService_ReportBroadcastChannel",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_channel_id",
            "in": "query",
            "description": "Broadcast channel ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "The reason for the report",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/SetBroadcastChannelImage/v1": {
      "post": {
        "summary": "Set broadcast channel image hash",
        "description": "Performs the SetBroadcastChannelImage operation",
        "operationId": "ISteamTVService_SetBroadcastChannelImage",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_channel_id",
            "in": "query",
            "description": "Broadcast channel ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "image_type",
            "in": "query",
            "description": "EBroadcastImage",
            "required": false,
            "schema": {
              "type": "ebroadcastimagetype"
            }
          },
          {
            "name": "image_index",
            "in": "query",
            "description": "Index of the image (for supporting multiple uploads of the same type",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "image_width",
            "in": "query",
            "description": "width in pixels",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "image_height",
            "in": "query",
            "description": "height in pixels",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "file_size",
            "in": "query",
            "description": "in bytes",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "file_extension",
            "in": "query",
            "description": "eg .jpg",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_hash",
            "in": "query",
            "description": "image SHA",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "undo",
            "in": "query",
            "description": "indicates this is a delete request",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/SetBroadcastChannelLinkRegions/v1": {
      "post": {
        "summary": "Set broadcast channel link regions",
        "description": "Performs the SetBroadcastChannelLinkRegions operation",
        "operationId": "ISteamTVService_SetBroadcastChannelLinkRegions",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_channel_id",
            "in": "query",
            "description": "Broadcast channel ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "links",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "csteamtv_setbroadcastchannellinkregions_request.links"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/SetBroadcastChannelProfile/v1": {
      "post": {
        "summary": "Set broadcast channel profile data",
        "description": "Performs the SetBroadcastChannelProfile operation",
        "operationId": "ISteamTVService_SetBroadcastChannelProfile",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_channel_id",
            "in": "query",
            "description": "Broadcast channel ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "long channel name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "primary channel language (Steam shortname)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "headline",
            "in": "query",
            "description": "short channel desciption",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "summary",
            "in": "query",
            "description": "long channel desciption",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avatar_hash",
            "in": "query",
            "description": "community avatar hash",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schedule",
            "in": "query",
            "description": "broadcast channel schedule",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rules",
            "in": "query",
            "description": "broadcast channel rules",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "panels",
            "in": "query",
            "description": "JSON data representing the channel panel layout",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/SetSteamTVUserSettings/v1": {
      "post": {
        "summary": "Sets a user's SteamTV settings",
        "description": "Performs the SetSteamTVUserSettings operation",
        "operationId": "ISteamTVService_SetSteamTVUserSettings",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stream_live_email",
            "in": "query",
            "description": "Send email when followed stream starts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "stream_live_notification",
            "in": "query",
            "description": "Send Steam notification when followed stream starts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamTVService/SubscribeBroadcastChannel/v1": {
      "post": {
        "summary": "Subscribe to a broadcast channel",
        "description": "Performs the SubscribeBroadcastChannel operation",
        "operationId": "ISteamTVService_SubscribeBroadcastChannel",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "broadcast_channel_id",
            "in": "query",
            "description": "Broadcast channel ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ISteamUser/GetDeletedSteamIDs/v1": {
      "get": {
        "summary": "GetDeletedSteamIDs operation of ISteamUser",
        "description": "Performs the GetDeletedSteamIDs operation",
        "operationId": "ISteamUser_GetDeletedSteamIDs",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Steamworks Web API publisher authentication key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rowversion",
            "in": "query",
            "description": "An unsigned 64-bit value used to page through deleted accounts. Pass 0 when calling this\r\n            API for the first time, then pass the value returned from the previous call for each\r\n            additional request. This value will need to be stored on your server for future calls.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IStoreAppSimilarityService/IdentifyClustersFromPlaytime/v1": {
      "post": {
        "summary": "IdentifyClustersFromPlaytime operation of IStoreAppSimilarityService",
        "description": "Performs the IdentifyClustersFromPlaytime operation",
        "operationId": "IStoreAppSimilarityService_IdentifyClustersFromPlaytime",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "clusters_to_return",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cluster_index",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "language": {
                  "type": "string",
                  "description": ""
                },
                "elanguage": {
                  "type": "integer",
                  "description": ""
                },
                "country_code": {
                  "type": "string",
                  "description": ""
                },
                "steam_realm": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          },
          {
            "name": "data_request",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "include_assets": {
                  "type": "boolean",
                  "description": ""
                },
                "include_release": {
                  "type": "boolean",
                  "description": ""
                },
                "include_platforms": {
                  "type": "boolean",
                  "description": ""
                },
                "include_all_purchase_options": {
                  "type": "boolean",
                  "description": ""
                },
                "include_screenshots": {
                  "type": "boolean",
                  "description": ""
                },
                "include_trailers": {
                  "type": "boolean",
                  "description": ""
                },
                "include_ratings": {
                  "type": "boolean",
                  "description": ""
                },
                "include_tag_count": {
                  "type": "integer",
                  "description": ""
                },
                "include_reviews": {
                  "type": "boolean",
                  "description": ""
                },
                "include_basic_info": {
                  "type": "boolean",
                  "description": ""
                },
                "include_supported_languages": {
                  "type": "boolean",
                  "description": ""
                },
                "include_full_description": {
                  "type": "boolean",
                  "description": ""
                },
                "include_included_items": {
                  "type": "boolean",
                  "description": ""
                },
                "included_item_data_request": {
                  "type": "storebrowseitemdatarequest",
                  "description": ""
                },
                "include_assets_without_overrides": {
                  "type": "boolean",
                  "description": ""
                },
                "apply_user_filters": {
                  "type": "boolean",
                  "description": ""
                },
                "include_links": {
                  "type": "boolean",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IStoreCatalogService/GetDevPageAllAppsLinked/v1": {
      "post": {
        "summary": "GetDevPageAllAppsLinked operation of IStoreCatalogService",
        "description": "Performs the GetDevPageAllAppsLinked operation",
        "operationId": "IStoreCatalogService_GetDevPageAllAppsLinked",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clan_account_ids",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "ignore_dlc",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IStoreSalesService/SetVote/v1": {
      "post": {
        "summary": "SetVote operation of IStoreSalesService",
        "description": "Performs the SetVote operation",
        "operationId": "IStoreSalesService_SetVote",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "voteid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sale_appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IStoreService/DeleteReservationPositionMessage/v1": {
      "post": {
        "summary": "Marks a position is deleted and will no longer be surfaced",
        "description": "Performs the DeleteReservationPositionMessage operation",
        "operationId": "IStoreService_DeleteReservationPositionMessage",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "edistributor",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_identifier",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_queue_position",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IStoreService/GetUserGameInterestState/v1": {
      "post": {
        "summary": "Get information about a user's relationship to a game - ownership, wishlist, discovery queue state, etc.",
        "description": "Performs the GetUserGameInterestState operation",
        "operationId": "IStoreService_GetUserGameInterestState",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "store_appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "beta_appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IStoreService/GetWishlistDemoEmailStatus/v1": {
      "post": {
        "summary": "GetWishlistDemoEmailStatus operation of IStoreService",
        "description": "Performs the GetWishlistDemoEmailStatus operation",
        "operationId": "IStoreService_GetWishlistDemoEmailStatus",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "demo_appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IStoreService/MigratePartnerLinkTracking/v1": {
      "post": {
        "summary": "Move UTM data from the PartnerLinkTrackingLogNoUser table to the PartnerLinkTrackingLogWithUser table",
        "description": "Performs the MigratePartnerLinkTracking operation",
        "operationId": "IStoreService_MigratePartnerLinkTracking",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "browserid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "backfill_source",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "epartnerlinktrackingbackfillsource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IStoreService/QueueWishlistDemoEmailToFire/v1": {
      "post": {
        "summary": "QueueWishlistDemoEmailToFire operation of IStoreService",
        "description": "Performs the QueueWishlistDemoEmailToFire operation",
        "operationId": "IStoreService_QueueWishlistDemoEmailToFire",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "demo_appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IStoreService/ReloadAllReservationPositionMessages/v1": {
      "post": {
        "summary": "Refreshes all of the caches through the store features servers",
        "description": "Performs the ReloadAllReservationPositionMessages operation",
        "operationId": "IStoreService_ReloadAllReservationPositionMessages",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IStoreService/SetReservationPositionMessage/v1": {
      "post": {
        "summary": "Creates/Update a reservation position message for people in the queue or next queue position for people deciding to join",
        "description": "Performs the SetReservationPositionMessage operation",
        "operationId": "IStoreService_SetReservationPositionMessage",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "settings[0]",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "edistributor": {
                  "type": "integer",
                  "description": ""
                },
                "product_identifier": {
                  "type": "string",
                  "description": ""
                },
                "start_queue_position": {
                  "type": "integer",
                  "description": ""
                },
                "rtime_estimated_notification": {
                  "type": "integer",
                  "description": ""
                },
                "localization_token": {
                  "type": "string",
                  "description": ""
                },
                "accountid": {
                  "type": "integer",
                  "description": ""
                },
                "rtime_created": {
                  "type": "integer",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IStoreService/SkipDiscoveryQueueItem/v1": {
      "post": {
        "summary": "Skip an item in the user's queue.",
        "description": "Performs the SkipDiscoveryQueueItem operation",
        "operationId": "IStoreService_SkipDiscoveryQueueItem",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "queue_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "estorediscoveryqueuetype"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "store_page_filter",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "sale_filter": {
                  "type": "cstorepagefilter.salepagefilter",
                  "description": ""
                },
                "content_hub_filter": {
                  "type": "cstorepagefilter.contenthubfilter",
                  "description": ""
                },
                "store_filters[0]": {
                  "type": "cstorepagefilter.storefilter[]",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IStoreService/UpdatePackageReservations/v1": {
      "post": {
        "summary": "Updates the reservations for a user",
        "description": "Performs the UpdatePackageReservations operation",
        "operationId": "IStoreService_UpdatePackageReservations",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "packages_to_reserve",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "packages_to_unreserve",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ITrustService/GetTrustScore/v1": {
      "get": {
        "summary": "Returns the Trust Score for the provided account in the specified appid.",
        "description": "Performs the GetTrustScore operation",
        "operationId": "ITrustService_GetTrustScore",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ITwoFactorService/AddAuthenticator/v1": {
      "post": {
        "summary": "Add two-factor authenticator to the logged-in account",
        "description": "Performs the AddAuthenticator operation",
        "operationId": "ITwoFactorService_AddAuthenticator",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "steamid to use",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "authenticator_time",
            "in": "query",
            "description": "Current authenticator time",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "serial_number",
            "in": "query",
            "description": "locally computed serial (deprecated)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "authenticator_type",
            "in": "query",
            "description": "Authenticator type",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "device_identifier",
            "in": "query",
            "description": "Authenticator identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sms_phone_id",
            "in": "query",
            "description": "ID of phone to use for SMS verification",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "http_headers",
            "in": "query",
            "description": "HTTP headers alternating by K/V",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "What the version of our token should be",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ITwoFactorService/CreateEmergencyCodes/v1": {
      "post": {
        "summary": "Generate emergency authenticator codes",
        "description": "Performs the CreateEmergencyCodes operation",
        "operationId": "ITwoFactorService_CreateEmergencyCodes",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ITwoFactorService/DestroyEmergencyCodes/v1": {
      "post": {
        "summary": "Destroy emergency authenticator codes for the account",
        "description": "Performs the DestroyEmergencyCodes operation",
        "operationId": "ITwoFactorService_DestroyEmergencyCodes",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "steamid to use",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ITwoFactorService/FinalizeAddAuthenticator/v1": {
      "post": {
        "summary": "Finalize two-factor authentication addition to the logged-in account",
        "description": "Performs the FinalizeAddAuthenticator operation",
        "operationId": "ITwoFactorService_FinalizeAddAuthenticator",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "steamid to use",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "authenticator_code",
            "in": "query",
            "description": "Current auth code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authenticator_time",
            "in": "query",
            "description": "Current authenticator time",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "activation_code",
            "in": "query",
            "description": "Activation code from out-of-band message",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "http_headers",
            "in": "query",
            "description": "HTTP headers alternating by K/V",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "validate_sms_code",
            "in": "query",
            "description": "When finalizing with an SMS code, pass the request on to the PhoneService to update its state too.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ITwoFactorService/QueryStatus/v1": {
      "post": {
        "summary": "Get two-factor authentication settings for the logged-in account",
        "description": "Performs the QueryStatus operation",
        "operationId": "ITwoFactorService_QueryStatus",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "steamid to use",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ITwoFactorService/RemoveAuthenticator/v1": {
      "post": {
        "summary": "Remove two-factor authentication addition from the logged-in account",
        "description": "Performs the RemoveAuthenticator operation",
        "operationId": "ITwoFactorService_RemoveAuthenticator",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revocation_code",
            "in": "query",
            "description": "Password needed to remove token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revocation_reason",
            "in": "query",
            "description": "Reason the authenticator is being removed",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "steamguard_scheme",
            "in": "query",
            "description": "Type of Steam Guard to use once token is removed",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "remove_all_steamguard_cookies",
            "in": "query",
            "description": "Remove all steamguard cookies",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ITwoFactorService/RemoveAuthenticatorViaChallengeContinue/v1": {
      "post": {
        "summary": "Continue challenge-based authenticator removal",
        "description": "Performs the RemoveAuthenticatorViaChallengeContinue operation",
        "operationId": "ITwoFactorService_RemoveAuthenticatorViaChallengeContinue",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sms_code",
            "in": "query",
            "description": "Code from SMS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "generate_new_token",
            "in": "query",
            "description": "Generate new token (instead of removing old one)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "What the version of our token should be",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ITwoFactorService/RemoveAuthenticatorViaChallengeStart/v1": {
      "post": {
        "summary": "Start challenge-based authenticator removal",
        "description": "Performs the RemoveAuthenticatorViaChallengeStart operation",
        "operationId": "ITwoFactorService_RemoveAuthenticatorViaChallengeStart",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ITwoFactorService/SendEmail/v1": {
      "post": {
        "summary": "Send email to the account",
        "description": "Performs the SendEmail operation",
        "operationId": "ITwoFactorService_SendEmail",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "Steamid to use",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "email_type",
            "in": "query",
            "description": "Type of email to send (ETwoFactorEmailType::*)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "include_activation_code",
            "in": "query",
            "description": "Include activation code in email parameters",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ITwoFactorService/UpdateTokenVersion/v1": {
      "post": {
        "summary": "Update the version for my token",
        "description": "Performs the UpdateTokenVersion operation",
        "operationId": "ITwoFactorService_UpdateTokenVersion",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "What the version of our token should be",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "HMAC digest over user's private key",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ITwoFactorService/ValidateToken/v1": {
      "post": {
        "summary": "Validate (and consume) a token",
        "description": "Performs the ValidateToken operation",
        "operationId": "ITwoFactorService_ValidateToken",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "code to validate",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IUserAccountService/GetClientWalletDetails/v1": {
      "post": {
        "summary": "Returns balance and details about any users wallet",
        "description": "Performs the GetClientWalletDetails operation",
        "operationId": "IUserAccountService_GetClientWalletDetails",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_balance_in_usd",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "wallet_region",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "include_formatted_balance",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IUserAccountService/GetUserCountry/v1": {
      "post": {
        "summary": "Get the country code associated with the passed steamid (only available for logged-in user or support)",
        "description": "Performs the GetUserCountry operation",
        "operationId": "IUserAccountService_GetUserCountry",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "steamid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IUserGameNotesService/DeleteNote/v1": {
      "post": {
        "summary": "DeleteNote operation of IUserGameNotesService",
        "description": "Performs the DeleteNote operation",
        "operationId": "IUserGameNotesService_DeleteNote",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "shortcut_name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shortcutid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "note_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IUserGameNotesService/GetGamesWithNotes/v1": {
      "post": {
        "summary": "GetGamesWithNotes operation of IUserGameNotesService",
        "description": "Performs the GetGamesWithNotes operation",
        "operationId": "IUserGameNotesService_GetGamesWithNotes",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IUserGameNotesService/GetNotesForGame/v1": {
      "post": {
        "summary": "GetNotesForGame operation of IUserGameNotesService",
        "description": "Performs the GetNotesForGame operation",
        "operationId": "IUserGameNotesService_GetNotesForGame",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "shortcut_name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shortcutid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "include_content",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IUserGameNotesService/SaveNote/v1": {
      "post": {
        "summary": "SaveNote operation of IUserGameNotesService",
        "description": "Performs the SaveNote operation",
        "operationId": "IUserGameNotesService_SaveNote",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "shortcut_name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shortcutid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "note_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "create_new",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IVideoService/GetVideoBookmarks/v1": {
      "post": {
        "summary": "Returns the video bookmarks locations for the specific videos. Includes playback settings per video",
        "description": "Performs the GetVideoBookmarks operation",
        "operationId": "IVideoService_GetVideoBookmarks",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appids",
            "in": "query",
            "description": "List of App IDs to grab bookmarks for. Can be empty if using updated_since.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Only return results after time. Min value is 1. (seconds since epoch January 1st, 1970 Unix Time)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IVideoService/SetVideoBookmark/v1": {
      "post": {
        "summary": "Bookmarks the locations in the video the user has reached. As as record playback settings per video. Fire and forget.",
        "description": "Performs the SetVideoBookmark operation",
        "operationId": "IVideoService_SetVideoBookmark",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bookmarks[0]",
            "in": "query",
            "description": "list of bookmarks we want to store.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "app_id": {
                  "type": "integer",
                  "description": ""
                },
                "playback_position_in_seconds": {
                  "type": "integer",
                  "description": ""
                },
                "video_track_id": {
                  "type": "integer",
                  "description": ""
                },
                "audio_track_id": {
                  "type": "integer",
                  "description": ""
                },
                "timedtext_track_id": {
                  "type": "integer",
                  "description": ""
                },
                "last_modified": {
                  "type": "integer",
                  "description": ""
                },
                "hide_from_watch_history": {
                  "type": "boolean",
                  "description": ""
                },
                "hide_from_library": {
                  "type": "boolean",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IWishlistService/AddToWishlist/v1": {
      "post": {
        "summary": "AddToWishlist operation of IWishlistService",
        "description": "Performs the AddToWishlist operation",
        "operationId": "IWishlistService_AddToWishlist",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "navdata",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string",
                  "description": ""
                },
                "controller": {
                  "type": "string",
                  "description": ""
                },
                "method": {
                  "type": "string",
                  "description": ""
                },
                "submethod": {
                  "type": "string",
                  "description": ""
                },
                "feature": {
                  "type": "string",
                  "description": ""
                },
                "depth": {
                  "type": "integer",
                  "description": ""
                },
                "countrycode": {
                  "type": "string",
                  "description": ""
                },
                "webkey": {
                  "type": "integer",
                  "description": ""
                },
                "is_client": {
                  "type": "boolean",
                  "description": ""
                },
                "curator_data": {
                  "type": "cuserinterface_curatordata",
                  "description": ""
                },
                "is_likely_bot": {
                  "type": "boolean",
                  "description": ""
                },
                "is_utm": {
                  "type": "boolean",
                  "description": ""
                }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/IWishlistService/RemoveFromWishlist/v1": {
      "post": {
        "summary": "RemoveFromWishlist operation of IWishlistService",
        "description": "Performs the RemoveFromWishlist operation",
        "operationId": "IWishlistService_RemoveFromWishlist",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Access key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.steampowered.com"
    }
  ]
}
